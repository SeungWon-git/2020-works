


----------------------------------------------
소스.cpp - 2020-09-21 오후 12:55:57 - (월요일)
----------------------------------------------

//----------------------------------------------------------------------------------
//2020.2학기 C++															(2주2일)
//
//시험1 9월28일(월)예정 - 시험범위 따로 없음
//----------------------------------------------------------------------------------

#pragma warning(disable:4996)
#include <iostream>	
#include "save.h"	
using namespace std;

//[문제] 정수n의 값을 화면에 출력하시오

int main()
{
	int n = 1;			//int만큼 메모리를 줘,앞으로 나는 그 메모리를 n이라는 이름으로 access할래

	cout << n;

	save("소스.cpp");
}



----------------------------------------------
소스.cpp - 2020-09-21 오후 12:58:51 - (월요일)
----------------------------------------------

//----------------------------------------------------------------------------------
//2020.2학기 C++															(2주2일)
//
//시험1 9월28일(월)예정 - 시험범위 따로 없음
//----------------------------------------------------------------------------------

#pragma warning(disable:4996)
#include <iostream>	
#include "save.h"	
using namespace std;

//[문제] 정수n의 값을 화면에 출력하시오

int m;			//전역변수

int main()
{
	int n = 1;			//int만큼 메모리를 줘,앞으로 나는 그 메모리를 n이라는 이름으로 access할래

	cout << n;			//지역변수는 초기화를 반드시 해줘야함

	cout << '\n';

	cout << m;

	save("소스.cpp");
}



----------------------------------------------
소스.cpp - 2020-09-21 오후 1:00:27 - (월요일)
----------------------------------------------

//----------------------------------------------------------------------------------
//2020.2학기 C++															(2주2일)
//
//시험1 9월28일(월)예정 - 시험범위 따로 없음
//----------------------------------------------------------------------------------

#pragma warning(disable:4996)
#include <iostream>	
#include "save.h"	
using namespace std;

//[문제] 정수n의 값을 화면에 출력하시오

int m;			//전역변수 - data segment에 할당됨

int main()
{
	int n = 1;			//int만큼 메모리를 줘,앞으로 나는 그 메모리를 n이라는 이름으로 access할래

	cout << n;			//지역변수는 초기화를 반드시 해줘야함

	cout << '\n';

	cout << m;		//전역변수는 0으로 기본 초기화해줌

	save("소스.cpp");
}



----------------------------------------------
소스.cpp - 2020-09-21 오후 1:03:39 - (월요일)
----------------------------------------------

//----------------------------------------------------------------------------------
//2020.2학기 C++															(2주2일)
//
//시험1 9월28일(월)예정 - 시험범위 따로 없음
//----------------------------------------------------------------------------------

#pragma warning(disable:4996)
#include <iostream>	
#include "save.h"	
using namespace std;

//[문제] 정수n의 값을 화면에 출력하시오

int m;			//전역변수 - data segment에 할당됨

int main()
{
	int n = 1;			//int만큼 메모리를 줘,앞으로 나는 그 메모리를 n이라는 이름으로 access할래

	cout << n;			//지역변수는 초기화를 반드시 해줘야함

	cout << '\n';

	cout << m;		//전역변수는 0으로 기본 초기화해줌

	save("소스.cpp");
}



----------------------------------------------
소스.cpp - 2020-09-21 오후 1:06:45 - (월요일)
----------------------------------------------

//----------------------------------------------------------------------------------
//2020.2학기 C++															(2주2일)
//
//시험1 9월28일(월)예정 - 시험범위 따로 없음
//----------------------------------------------------------------------------------

#pragma warning(disable:4996)
#include <iostream>	
#include "save.h"	
using namespace std;

//[문제] 정수n의 값을 화면에 출력하시오
//+Debug모드와 Release모드의 차이:	디버그 모드는 버그를 찾기위해 실해시간이 길고 용량도 커진다.
// 하지만 릴리즈 모드는 배포용으로 훨씬 가볍다.

int main()
{
	int n ;			
	

	save("소스.cpp");
}



----------------------------------------------
소스.cpp - 2020-09-21 오후 1:09:31 - (월요일)
----------------------------------------------

//----------------------------------------------------------------------------------
//2020.2학기 C++															(2주2일)
//
//시험1 9월28일(월)예정 - 시험범위 따로 없음
//----------------------------------------------------------------------------------

#pragma warning(disable:4996)
#include <iostream>	
#include "save.h"	
using namespace std;

//[문제] 정수n의 값을 화면에 출력하시오
//+Debug모드와 Release모드의 차이:	디버그 모드는 버그를 찾기위해 실해시간이 길고 용량도 커진다.
// 하지만 릴리즈 모드는 배포용으로 훨씬 가볍다.

int main()
{
	int n ;			
	n = 1234;
	int b = n;	//n을 읽어 b에 줄꺼야

	//int    n      => n 변수
	//Player mario  => mario 객체(object)


	save("소스.cpp");
}



----------------------------------------------
소스.cpp - 2020-09-21 오후 1:11:02 - (월요일)
----------------------------------------------

//----------------------------------------------------------------------------------
//2020.2학기 C++															(2주2일)
//
//시험1 9월28일(월)예정 - 시험범위 따로 없음
//----------------------------------------------------------------------------------

#pragma warning(disable:4996)
#include <iostream>	
#include "save.h"	
using namespace std;

//[문제] 다음 main()이 문제없이 실행되게 해라.
// 단,main()이 변경되면 안된다.

//1)
#define Player int

int main()
{
	int n ;			

	Player mario;


	save("소스.cpp");
}



----------------------------------------------
소스.cpp - 2020-09-21 오후 1:11:51 - (월요일)
----------------------------------------------

//----------------------------------------------------------------------------------
//2020.2학기 C++															(2주2일)
//
//시험1 9월28일(월)예정 - 시험범위 따로 없음
//----------------------------------------------------------------------------------

#pragma warning(disable:4996)
#include <iostream>	
#include "save.h"	
using namespace std;

//[문제] 다음 main()이 문제없이 실행되게 해라.
// 단,main()이 변경되면 안된다.

//1)
//#define Player int -> 잘안쓰이는 표현
//2)
using Player = int;

int main()
{
	int n ;			

	Player mario;


	save("소스.cpp");
}



----------------------------------------------
소스.cpp - 2020-09-21 오후 1:16:08 - (월요일)
----------------------------------------------

//----------------------------------------------------------------------------------
//2020.2학기 C++															(2주2일)
//
//시험1 9월28일(월)예정 - 시험범위 따로 없음
//----------------------------------------------------------------------------------

#pragma warning(disable:4996)
#include <iostream>	
#include "save.h"	
using namespace std;

//[문제] 다음 main()이 문제없이 실행되게 해라.
// 단,main()이 변경되면 안된다.
// + Player는 사용자가 만든 자료형이어야 한다.
//	 즉, Player는 char,int,double와 같은 자료형이면 안된다.

//1)
//#define Player int -> 잘안쓰이는 표현
//2)
//using Player = int;
//+)
struct Player {
	char x[1000];
};

int main()
{
	int n ;			

	Player mario;

	cout << sizeof(mario) << '\n';


	save("소스.cpp");
}



----------------------------------------------
소스.cpp - 2020-09-21 오후 1:16:32 - (월요일)
----------------------------------------------

//----------------------------------------------------------------------------------
//2020.2학기 C++															(2주2일)
//
//시험1 9월28일(월)예정 - 시험범위 따로 없음
//----------------------------------------------------------------------------------

#pragma warning(disable:4996)
#include <iostream>	
#include "save.h"	
using namespace std;

//[문제] 다음 main()이 문제없이 실행되게 해라.
// 단,main()이 변경되면 안된다.
// + Player는 사용자가 만든 자료형이어야 한다.
//	 즉, Player는 char,int,double와 같은 자료형이면 안된다.

//1)
//#define Player int -> 잘안쓰이는 표현
//2)
//using Player = int;
//+)
struct Player {

};

int main()
{
	int n ;			

	Player mario;

	cout << sizeof(mario) << '\n';


	save("소스.cpp");
}



----------------------------------------------
소스.cpp - 2020-09-21 오후 1:17:44 - (월요일)
----------------------------------------------

//----------------------------------------------------------------------------------
//2020.2학기 C++															(2주2일)
//
//시험1 9월28일(월)예정 - 시험범위 따로 없음
//----------------------------------------------------------------------------------

#pragma warning(disable:4996)
#include <iostream>	
#include "save.h"	
using namespace std;

//[문제] 다음 main()이 문제없이 실행되게 해라.
// 단,main()이 변경되면 안된다.
// + Player는 사용자가 만든 자료형이어야 한다.
//	 즉, Player는 char,int,double와 같은 자료형이면 안된다.

//1)
//#define Player int -> 잘안쓰이는 표현
//2)
//using Player = int;
//+)
struct Player {

};

int main()
{
	int n ;			

	Player mario;

	cout << sizeof(mario) << '\n'; //최소한의 메모리인 (가짜 용량)1바이트를 주는 것


	save("소스.cpp");
}



----------------------------------------------
소스.cpp - 2020-09-21 오후 1:22:29 - (월요일)
----------------------------------------------

//----------------------------------------------------------------------------------
//2020.2학기 C++															(2주2일)
//
//시험1 9월28일(월)예정 - 시험범위 따로 없음
//
//주사위를 굴리는 프로그램을 작성하고 랜덤넘버를 만드는 방법을 알아본다.
//
//[다음시간]변수값의 교환과 레퍼런스
//----------------------------------------------------------------------------------

#pragma warning(disable:4996)
#include <iostream>	
#include "save.h"	
using namespace std;

//[실습]주사위 프로그램 만들자

int main()
{
	char c;

	cout << "주사위 프로그램입니다.\n\n";

	cout << "글짜를 누르면 주사위를 굴립니다. ";

	cin >> c;

	//[할 일]1~6중 수 하나를 화면에 출력해보자.

	cout << rand() % 6 + 1;

	save("소스.cpp");
}



----------------------------------------------
소스.cpp - 2020-09-21 오후 1:32:36 - (월요일)
----------------------------------------------

//----------------------------------------------------------------------------------
//2020.2학기 C++															(2주2일)
//
//시험1 9월28일(월)예정 - 시험범위 따로 없음
//
//주사위를 굴리는 프로그램을 작성하고 랜덤넘버를 만드는 방법을 알아본다.
//
//[다음시간]변수값의 교환과 레퍼런스
//----------------------------------------------------------------------------------

#pragma warning(disable:4996)
#include <iostream>	
#include "save.h"	
using namespace std;

//[실습]주사위 프로그램 만들자

int main()
{
	save("소스.cpp");

	char c;

	cout << "주사위 프로그램입니다.\n\n";

	//cout << "글짜를 누르면 주사위를 굴립니다. ";

	cin >> c;

	//[할 일]1~6중 수 하나를 화면에 출력해보자.

	cout <<"주사위의 수는 "<< rand() % 6 + 1;	//랜덤이 아니고 무조건 6이나온다...왜?

	//먼저 랜덤이란 뒤에 사건이 앞의 사건에 영향을 받지않는 것을 의미한다. 이는 동전 백번던져 앞면이 계속 나왔을
	//지라도 101번째에서는 뭐가 나올지 모른다는 뜻이다. 대신 이 반복하는 횟수가 많을 수록 확률은 더욱 정확해진다.
	//컴퓨터는 랜덤을 뽑기가 거의 불가능하다. 그중 rand는 최하위에 속하는데 이는 앞뒤가 영향을 받아 예측이 가능하기때문이다.


	save("소스.cpp");
}



----------------------------------------------
소스.cpp - 2020-09-21 오후 1:32:43 - (월요일)
----------------------------------------------

//----------------------------------------------------------------------------------
//2020.2학기 C++															(2주2일)
//
//시험1 9월28일(월)예정 - 시험범위 따로 없음
//
//주사위를 굴리는 프로그램을 작성하고 랜덤넘버를 만드는 방법을 알아본다.
//
//[다음시간]변수값의 교환과 레퍼런스
//----------------------------------------------------------------------------------

#pragma warning(disable:4996)
#include <iostream>	
#include "save.h"	
using namespace std;

//[실습]주사위 프로그램 만들자

int main()
{
	save("소스.cpp");

	char c;

	cout << "주사위 프로그램입니다.\n\n";

	//cout << "글짜를 누르면 주사위를 굴립니다. ";

	cin >> c;

	//[할 일]1~6중 수 하나를 화면에 출력해보자.

	cout <<"주사위의 수는 "<< rand() % 6 + 1;	//랜덤이 아니고 무조건 6이나온다...왜?

	//먼저 랜덤이란 뒤에 사건이 앞의 사건에 영향을 받지않는 것을 의미한다. 이는 동전 백번던져 앞면이 계속 나왔을
	//지라도 101번째에서는 뭐가 나올지 모른다는 뜻이다. 대신 이 반복하는 횟수가 많을 수록 확률은 더욱 정확해진다.
	//컴퓨터는 랜덤을 뽑기가 거의 불가능하다. 그중 rand는 최하위에 속하는데 이는 앞뒤가 영향을 받아 예측이 가능하기때문이다.


	save("소스.cpp");
}



----------------------------------------------
소스.cpp - 2020-09-21 오후 1:33:54 - (월요일)
----------------------------------------------

//----------------------------------------------------------------------------------
//2020.2학기 C++															(2주2일)
//
//시험1 9월28일(월)예정 - 시험범위 따로 없음
//
//주사위를 굴리는 프로그램을 작성하고 랜덤넘버를 만드는 방법을 알아본다.
//
//[다음시간]변수값의 교환과 레퍼런스
//----------------------------------------------------------------------------------

#pragma warning(disable:4996)
#include <iostream>	
#include "save.h"	
using namespace std;

//[실습]주사위 프로그램 만들자

int main()
{
	save("소스.cpp");

	char c;

	cout << "주사위 프로그램입니다.\n\n";

	//cout << "글짜를 누르면 주사위를 굴립니다. ";

	//cin >> c;

	//[할 일]1~6중 수 하나를 화면에 출력해보자.

	//먼저 랜덤이란 뒤에 사건이 앞의 사건에 영향을 받지않는 것을 의미한다. 이는 동전 백번던져 앞면이 계속 나왔을
	//지라도 101번째에서는 뭐가 나올지 모른다는 뜻이다. 대신 이 반복하는 횟수가 많을 수록 확률은 더욱 정확해진다.
	//컴퓨터는 랜덤을 뽑기가 거의 불가능하다. 그중 rand는 최하위에 속하는데 이는 앞뒤가 영향을 받아 예측이 가능하기때문이다.

	for (;;)
		cout << "rnad()의 결과 " << rand() << '\n';

	save("소스.cpp");
}



----------------------------------------------
소스.cpp - 2020-09-21 오후 1:37:43 - (월요일)
----------------------------------------------

//----------------------------------------------------------------------------------
//2020.2학기 C++															(2주2일)
//
//시험1 9월28일(월)예정 - 시험범위 따로 없음
//
//주사위를 굴리는 프로그램을 작성하고 랜덤넘버를 만드는 방법을 알아본다.
//
//[다음시간]변수값의 교환과 레퍼런스
//----------------------------------------------------------------------------------

#pragma warning(disable:4996)
#include <iostream>	
#include <thread>
#include<chrono>
#include "save.h"	
using namespace std::chrono;

//[실습]주사위 프로그램 만들자

int main()
{
	save("소스.cpp");

	char c;

	std::cout << "주사위 프로그램입니다.\n\n";

	//cout << "글짜를 누르면 주사위를 굴립니다. ";

	//cin >> c;

	//[할 일]1~6중 수 하나를 화면에 출력해보자.

	//먼저 랜덤이란 뒤에 사건이 앞의 사건에 영향을 받지않는 것을 의미한다. 이는 동전 백번던져 앞면이 계속 나왔을
	//지라도 101번째에서는 뭐가 나올지 모른다는 뜻이다. 대신 이 반복하는 횟수가 많을 수록 확률은 더욱 정확해진다.
	//컴퓨터는 랜덤을 뽑기가 거의 불가능하다. 그중 rand는 최하위에 속하는데 이는 앞뒤가 영향을 받아 예측이 가능하기때문이다.

	for (;;) {
		std::cout << "rnad()의 결과 " << rand() << '\n';
		std::this_thread::sleep_for(333ms);
	}

	
}



----------------------------------------------
소스.cpp - 2020-09-21 오후 1:40:24 - (월요일)
----------------------------------------------

//----------------------------------------------------------------------------------
//2020.2학기 C++															(2주2일)
//
//시험1 9월28일(월)예정 - 시험범위 따로 없음
//
//주사위를 굴리는 프로그램을 작성하고 랜덤넘버를 만드는 방법을 알아본다.
//
//[다음시간]변수값의 교환과 레퍼런스
//----------------------------------------------------------------------------------

#pragma warning(disable:4996)
#include <iostream>	
#include <thread>
#include<chrono>
#include "save.h"	
using namespace std::chrono;

//[실습]주사위 프로그램 만들자

int main()
{
	save("소스.cpp");

	char c;

	std::cout << "주사위 프로그램입니다.\n\n";

	//cout << "글짜를 누르면 주사위를 굴립니다. ";

	//cin >> c;

	//[할 일]1~6중 수 하나를 화면에 출력해보자.

	//먼저 랜덤이란 뒤에 사건이 앞의 사건에 영향을 받지않는 것을 의미한다. 이는 동전 백번던져 앞면이 계속 나왔을
	//지라도 101번째에서는 뭐가 나올지 모른다는 뜻이다. 대신 이 반복하는 횟수가 많을 수록 확률은 더욱 정확해진다.
	//컴퓨터는 랜덤을 뽑기가 거의 불가능하다. 그중 rand는 최하위에 속하는데 이는 앞뒤가 영향을 받아 예측이 가능하기때문이다.

	for (;;) {
		std::cout << "rand()의 결과 " << rand() << '\n';
		std::this_thread::sleep_for(333ms); //3초 
	}
	//출력 결과에서 값이 32000을 넘기지 않는 것을보면 이는 rand()가 16비트 함수임을 알수있다.

	
}



----------------------------------------------
소스.cpp - 2020-09-21 오후 1:43:42 - (월요일)
----------------------------------------------

//----------------------------------------------------------------------------------
//2020.2학기 C++															(2주2일)
//
//시험1 9월28일(월)예정 - 시험범위 따로 없음
//
//주사위를 굴리는 프로그램을 작성하고 랜덤넘버를 만드는 방법을 알아본다.
//
//[다음시간]변수값의 교환과 레퍼런스
//----------------------------------------------------------------------------------

#pragma warning(disable:4996)
#include <iostream>	
#include <thread>
#include<chrono>
#include <random>
#include "save.h"	
using namespace std;

//[실습]주사위 프로그램 만들자

int main()
{
	save("소스.cpp");

	default_random_engine dre;
	uniform_int_distribution<> uid;

	using namespace std::chrono;

	for (;;) {
		std::cout << "rand()의 결과 " << uid(dre) << '\n';
		std::this_thread::sleep_for(333ms); //1초에 3개 
	}
	//출력 결과에서 값이 32000을 넘기지 않는 것을보면 이는 rand()가 16비트 함수임을 알수있다.

	
}



----------------------------------------------
소스.cpp - 2020-09-21 오후 1:44:02 - (월요일)
----------------------------------------------

//----------------------------------------------------------------------------------
//2020.2학기 C++															(2주2일)
//
//시험1 9월28일(월)예정 - 시험범위 따로 없음
//
//주사위를 굴리는 프로그램을 작성하고 랜덤넘버를 만드는 방법을 알아본다.
//
//[다음시간]변수값의 교환과 레퍼런스
//----------------------------------------------------------------------------------

#pragma warning(disable:4996)
#include <iostream>	
#include <thread>
#include<chrono>
#include <random>
#include "save.h"	
using namespace std;

//[실습]주사위 프로그램 만들자

int main()
{
	save("소스.cpp");

	default_random_engine dre;
	uniform_int_distribution<> uid;

	using namespace std::chrono;

	for (;;) {
		std::cout << "rand()의 결과 " << uid(dre) << '\n';
		std::this_thread::sleep_for(333ms); //1초에 3개 
	}
	//현대의 랜덤함수

	
}



----------------------------------------------
소스.cpp - 2020-09-21 오후 1:57:02 - (월요일)
----------------------------------------------

//----------------------------------------------------------------------------------
//2020.2학기 C++															(3주1일)
//
//주사위를 굴리는 프로그램을 작성하고 랜덤넘버를 만드는 방법을 알아본다.
//
//변수값의 교환과 레퍼런스
//----------------------------------------------------------------------------------

#pragma warning(disable:4996)
#include <iostream>	
#include <thread>
#include<chrono>
#include <random>
#include "save.h"	
using namespace std;

//[실습]주사위 프로그램 만들자

int main()
{
	cout << "주사위 프로그램" << '\n';

	for (int i = 0; i < 100; ++i)
		cout << rand() % 6 + 1 << ' ';

	default_random_engine dre;
	uniform_int_distribution<> uid;

	save("소스.cpp");
}



----------------------------------------------
소스.cpp - 2020-09-21 오후 2:00:44 - (월요일)
----------------------------------------------

//----------------------------------------------------------------------------------
//2020.2학기 C++															(3주1일)
//
//주사위를 굴리는 프로그램을 작성하고 랜덤넘버를 만드는 방법을 알아본다.
//
//변수값의 교환과 레퍼런스
//----------------------------------------------------------------------------------

#pragma warning(disable:4996)
#include <iostream>	
#include <thread>
#include<chrono>
#include <random>
#include "save.h"	
using namespace std;

//[실습]주사위 프로그램 만들자

int main()
{
	cout << "주사위 프로그램" << '\n';

	//rand()의 문제점
	for (int i = 0; i < 100; ++i)
		cout << rand() << '\n';

	default_random_engine dre;
	uniform_int_distribution<> uid;

	save("소스.cpp");
}



----------------------------------------------
소스.cpp - 2020-09-21 오후 2:01:31 - (월요일)
----------------------------------------------

//----------------------------------------------------------------------------------
//2020.2학기 C++															(3주1일)
//
//주사위를 굴리는 프로그램을 작성하고 랜덤넘버를 만드는 방법을 알아본다.
//
//변수값의 교환과 레퍼런스
//----------------------------------------------------------------------------------

#pragma warning(disable:4996)
#include <iostream>	
#include <thread>
#include<chrono>
#include <random>
#include "save.h"	
using namespace std;

//[실습]주사위 프로그램 만들자

int main()
{
	cout << "주사위 프로그램" << '\n';

	//rand()의 문제점 - 16비트 옛날 함수라서
	for (int i = 0; i < 100; ++i)
		cout << rand() << '\n';

	default_random_engine dre;
	uniform_int_distribution<> uid;

	save("소스.cpp");
}



----------------------------------------------
소스.cpp - 2020-09-21 오후 2:09:49 - (월요일)
----------------------------------------------

//----------------------------------------------------------------------------------
//2020.2학기 C++															(3주1일)
//
//주사위를 굴리는 프로그램을 작성하고 랜덤넘버를 만드는 방법을 알아본다.
//
//변수값의 교환과 레퍼런스
//----------------------------------------------------------------------------------

#pragma warning(disable:4996)
#include <iostream>	
#include <random>
#include "save.h"	
using namespace std;

//[실습]주사위 프로그램 만들자

int main()
{
	cout << "주사위 프로그램" << '\n';

	default_random_engine dre; //자료형 + 변수 형태이다.
	uniform_int_distribution<> uid; //앞에서 분포를 유니폼(확률분포가 일정한것 == 모든 x축에 y값이 같은 그래프)해서 꺼낸다. 

	for (int i = 0; i < 100; ++i)
		cout << uid(dre) << '\n'; 

	save("소스.cpp");
}



----------------------------------------------
소스.cpp - 2020-09-21 오후 2:11:11 - (월요일)
----------------------------------------------

//----------------------------------------------------------------------------------
//2020.2학기 C++															(3주1일)
//
//주사위를 굴리는 프로그램을 작성하고 랜덤넘버를 만드는 방법을 알아본다.
//
//변수값의 교환과 레퍼런스
//----------------------------------------------------------------------------------

#pragma warning(disable:4996)
#include <iostream>	
#include <random>
#include "save.h"	
using namespace std;

//[실습]주사위 프로그램 만들자

int main()
{
	cout << "주사위 프로그램" << '\n';

	default_random_engine dre; //자료형 + 변수 형태이다.
	uniform_int_distribution<> uid; //앞에서 분포를 유니폼(확률분포가 일정한것 == 모든 x축에 y값이 같은 그래프)해서 꺼낸다. 

	for (int i = 0; i < 100; ++i)
		cout << uid(dre) %6 +1 << '\n'; //좋지않은 효율적이지 않은 방법 

	save("소스.cpp");
}



----------------------------------------------
소스.cpp - 2020-09-21 오후 2:12:47 - (월요일)
----------------------------------------------

//----------------------------------------------------------------------------------
//2020.2학기 C++															(3주1일)
//
//주사위를 굴리는 프로그램을 작성하고 랜덤넘버를 만드는 방법을 알아본다.
//
//변수값의 교환과 레퍼런스
//----------------------------------------------------------------------------------

#pragma warning(disable:4996)
#include <iostream>	
#include <random>
#include "save.h"	
using namespace std;

//[실습]주사위 프로그램 만들자

int main()
{
	cout << "주사위 프로그램" << '\n';

	default_random_engine dre; //자료형 + 변수 형태이다.
	uniform_int_distribution<> uid{1,6}; //앞에서 분포를 유니폼(확률분포가 일정한것 == 모든 x축에 y값이 같은 그래프)해서 꺼낸다. 
	//int								n    ->변수
	//uniform_int_distribution<>		uid  ->클래스(능력이 더많음)

	for (int i = 0; i < 100; ++i)
		cout << uid(dre) << '\n'; //좋지않은 효율적이지 않은 방법 

	save("소스.cpp");
}



----------------------------------------------
소스.cpp - 2020-09-21 오후 2:13:19 - (월요일)
----------------------------------------------

//----------------------------------------------------------------------------------
//2020.2학기 C++															(3주1일)
//
//주사위를 굴리는 프로그램을 작성하고 랜덤넘버를 만드는 방법을 알아본다.
//
//변수값의 교환과 레퍼런스
//----------------------------------------------------------------------------------

#pragma warning(disable:4996)
#include <iostream>	
#include <random>
#include "save.h"	
using namespace std;



int main()
{
	cout << "주사위 프로그램" << '\n';

	default_random_engine dre; //자료형 + 변수 형태이다.
	uniform_int_distribution<> uid{1,6}; //앞에서 분포를 유니폼(확률분포가 일정한것 == 모든 x축에 y값이 같은 그래프)해서 꺼낸다. 
	//int								n    ->변수
	//uniform_int_distribution<>		uid  ->클래스(능력이 더많음)

	for (int i = 0; i < 100; ++i)
		cout << uid(dre) << '\n'; 

	save("소스.cpp");
}



----------------------------------------------
소스.cpp - 2020-09-21 오후 2:18:55 - (월요일)
----------------------------------------------

//----------------------------------------------------------------------------------
//2020.2학기 C++															(3주1일)
//
//주사위를 굴리는 프로그램을 작성하고 랜덤넘버를 만드는 방법을 알아본다.
//
//변수값의 교환과 레퍼런스
//----------------------------------------------------------------------------------

#pragma warning(disable:4996)
#include <iostream>	
#include <random>
#include "save.h"	
using namespace std;

//[문제] 주사위 값을 1000개 만들어서
// 각 숫자가 몇 번 나오는지 출력하라.
// 각 숫자가 나오는 확률도 출력하자.
// 확률분포가 uniform한것을 확인할 수 있는가?

int main()
{
	cout << "주사위 프로그램" << '\n';

	default_random_engine dre; //자료형 + 변수 형태이다.
	uniform_int_distribution<> uid{1,6}; //앞에서 분포를 유니폼(확률분포가 일정한것 == 모든 x축에 y값이 같은 그래프)해서 꺼낸다. 
	//int								n    ->변수
	//uniform_int_distribution<>		uid  ->클래스(능력이 더많음)

	int a1 = 0, a2 = 0, a3 = 0, a4 = 0, a5 = 0,  a6 = 0;

	for (int i = 0; i < 1000; ++i) {
		int t = uid(dre);
		if ( t== 1)a1++;
		else if (t == 2)a2++;
		else if (t == 3)a3++;
		else if (t == 4)a4++;
		else if (t == 5)a5++;
		else if (t == 6)a6++;
		cout << t << '\n';
	}

	cout << "1= " << a1 << '\n';
	cout << "2= " << a2 << '\n';
	cout << "3= " << a3 << '\n';
	cout << "4= " << a4 << '\n';
	cout << "5= " << a5 << '\n';
	cout << "6= " << a6 << '\n';

	save("소스.cpp");
}



----------------------------------------------
소스.cpp - 2020-09-21 오후 2:22:21 - (월요일)
----------------------------------------------

//----------------------------------------------------------------------------------
//2020.2학기 C++															(3주1일)
//
//주사위를 굴리는 프로그램을 작성하고 랜덤넘버를 만드는 방법을 알아본다.
//
//변수값의 교환과 레퍼런스
//----------------------------------------------------------------------------------

#pragma warning(disable:4996)
#include <iostream>	
#include <random>
#include "save.h"	
using namespace std;

//[문제] 주사위 값을 1000개 만들어서
// 각 숫자가 몇 번 나오는지 출력하라.
// 각 숫자가 나오는 확률도 출력하자.
// 확률분포가 uniform한것을 확인할 수 있는가?

int main()
{
	cout << "주사위 프로그램" << '\n';

	default_random_engine dre;
	uniform_int_distribution<> uid{1,6}; 

	int a1 = 0, a2 = 0, a3 = 0, a4 = 0, a5 = 0,  a6 = 0;

	for (int i = 0; i < 10000; ++i) {
		int t = uid(dre);

		if ( t== 1)a1++;
		else if (t == 2)a2++;
		else if (t == 3)a3++;
		else if (t == 4)a4++;
		else if (t == 5)a5++;
		else a6++;

	}

	cout << "1= " << a1 << '\n';
	cout << "2= " << a2 << '\n';
	cout << "3= " << a3 << '\n';
	cout << "4= " << a4 << '\n';
	cout << "5= " << a5 << '\n';
	cout << "6= " << a6 << '\n';

	save("소스.cpp");
}



----------------------------------------------
소스.cpp - 2020-09-21 오후 2:27:22 - (월요일)
----------------------------------------------

//----------------------------------------------------------------------------------
//2020.2학기 C++															(3주1일)
//
//주사위를 굴리는 프로그램을 작성하고 랜덤넘버를 만드는 방법을 알아본다.
//
//변수값의 교환과 레퍼런스
//----------------------------------------------------------------------------------

#pragma warning(disable:4996)
#include <iostream>	
#include <random>
#include "save.h"	
using namespace std;

//[문제] 주사위 값을 1000개 만들어서
// 각 숫자가 몇 번 나오는지 출력하라.
// 각 숫자가 나오는 확률도 출력하자.
// 확률분포가 uniform한것을 확인할 수 있는가?

int main()
{
	cout << "주사위 프로그램" << '\n';

	default_random_engine dre;
	uniform_int_distribution<> uid{1,6}; 

	int num[6]{};

	for (int i = 0; i < 1000; ++i) {
		int t = uid(dre);

		if ( t== 1)num[0];
		else if (t == 2)num[1];
		else if (t == 3)num[2];
		else if (t == 4)num[3];
		else if (t == 5)num[4];
		else num[5];

	}

	for(int i=0;i<6;++i)
		cout << i<<"= " << num[i] << '\n';


	save("소스.cpp");
}



----------------------------------------------
소스.cpp - 2020-09-21 오후 2:27:52 - (월요일)
----------------------------------------------

//----------------------------------------------------------------------------------
//2020.2학기 C++															(3주1일)
//
//주사위를 굴리는 프로그램을 작성하고 랜덤넘버를 만드는 방법을 알아본다.
//
//변수값의 교환과 레퍼런스
//----------------------------------------------------------------------------------

#pragma warning(disable:4996)
#include <iostream>	
#include <random>
#include "save.h"	
using namespace std;

//[문제] 주사위 값을 1000개 만들어서
// 각 숫자가 몇 번 나오는지 출력하라.
// 각 숫자가 나오는 확률도 출력하자.
// 확률분포가 uniform한것을 확인할 수 있는가?

int main()
{
	cout << "주사위 프로그램" << '\n';

	default_random_engine dre;
	uniform_int_distribution<> uid{1,6}; 

	int num[6]{};

	for (int i = 0; i < 1000; ++i) {
		int t = uid(dre);

		if ( t== 1)num[0]++;
		else if (t == 2)num[1]++;
		else if (t == 3)num[2]++;
		else if (t == 4)num[3]++;
		else if (t == 5)num[4]++;
		else num[5];

	}

	for(int i=0;i<6;++i)
		cout << i<<"= " << num[i] << '\n';


	save("소스.cpp");
}



----------------------------------------------
소스.cpp - 2020-09-21 오후 2:28:44 - (월요일)
----------------------------------------------

//----------------------------------------------------------------------------------
//2020.2학기 C++															(3주1일)
//
//주사위를 굴리는 프로그램을 작성하고 랜덤넘버를 만드는 방법을 알아본다.
//
//변수값의 교환과 레퍼런스
//----------------------------------------------------------------------------------

#pragma warning(disable:4996)
#include <iostream>	
#include <random>
#include "save.h"	
using namespace std;

//[문제] 주사위 값을 1000개 만들어서
// 각 숫자가 몇 번 나오는지 출력하라.
// 각 숫자가 나오는 확률도 출력하자.
// 확률분포가 uniform한것을 확인할 수 있는가?

int main()
{
	cout << "주사위 프로그램" << '\n';

	default_random_engine dre;
	uniform_int_distribution<> uid{1,6}; 

	int num[6]{};

	for (int i = 0; i < 1000; ++i) {
		int t = uid(dre);

		num[t - 1]++;
	}

	for(int i=0;i<6;++i)
		cout << i<<"= " << num[i] << '\n';


	save("소스.cpp");
}



----------------------------------------------
소스.cpp - 2020-09-21 오후 2:29:06 - (월요일)
----------------------------------------------

//----------------------------------------------------------------------------------
//2020.2학기 C++															(3주1일)
//
//주사위를 굴리는 프로그램을 작성하고 랜덤넘버를 만드는 방법을 알아본다.
//
//변수값의 교환과 레퍼런스
//----------------------------------------------------------------------------------

#pragma warning(disable:4996)
#include <iostream>	
#include <random>
#include "save.h"	
using namespace std;

//[문제] 주사위 값을 1000개 만들어서
// 각 숫자가 몇 번 나오는지 출력하라.
// 각 숫자가 나오는 확률도 출력하자.
// 확률분포가 uniform한것을 확인할 수 있는가?

int main()
{
	cout << "주사위 프로그램" << '\n';

	default_random_engine dre;
	uniform_int_distribution<> uid{1,6}; 

	int num[6]{};

	for (int i = 0; i < 1000; ++i) 
		num[uid(dre) - 1]++;
	

	for(int i=0;i<6;++i)
		cout << i<<"= " << num[i] << '\n';


	save("소스.cpp");
}



----------------------------------------------
소스.cpp - 2020-09-21 오후 2:31:19 - (월요일)
----------------------------------------------

//----------------------------------------------------------------------------------
//2020.2학기 C++															(3주1일)
//
//주사위를 굴리는 프로그램을 작성하고 랜덤넘버를 만드는 방법을 알아본다.
//
//변수값의 교환과 레퍼런스
//----------------------------------------------------------------------------------

#pragma warning(disable:4996)
#include <iostream>	
#include <random>
#include "save.h"	
using namespace std;

//[문제] 주사위 값을 1000개 만들어서
// 각 숫자가 몇 번 나오는지 출력하라.
// 각 숫자가 나오는 확률도 출력하자.
// 확률분포가 uniform한것을 확인할 수 있는가?

int main()
{

	default_random_engine dre;
	uniform_int_distribution<> uid{1,6}; 

	cout << uid(dre)<<'\n';
	cout << uid(dre) << '\n';
	cout << uid(dre) << '\n';
	//항상 같은 값이 나온다.

	save("소스.cpp");
}



----------------------------------------------
소스.cpp - 2020-09-21 오후 2:34:59 - (월요일)
----------------------------------------------

//----------------------------------------------------------------------------------
//2020.2학기 C++															(3주1일)
//
//주사위를 굴리는 프로그램을 작성하고 랜덤넘버를 만드는 방법을 알아본다.
//
//변수값의 교환과 레퍼런스
//----------------------------------------------------------------------------------

#pragma warning(disable:4996)
#include <iostream>	
#include <random>
#include "save.h"	
using namespace std;

//[문제] 주사위 값을 1000개 만들어서
// 각 숫자가 몇 번 나오는지 출력하라.
// 각 숫자가 나오는 확률도 출력하자.
// 확률분포가 uniform한것을 확인할 수 있는가?

int main()
{


	default_random_engine dre;
	uniform_int_distribution<> uid; 

	cout << uid(dre)<<'\n';
	cout << uid(dre) << '\n';
	cout << uid(dre) << '\n';
	//항상 같은 값이 나온다. - 결국 정해진 함수를 돌기때문

	save("소스.cpp");
}



----------------------------------------------
소스.cpp - 2020-09-21 오후 2:35:19 - (월요일)
----------------------------------------------

//----------------------------------------------------------------------------------
//2020.2학기 C++															(3주1일)
//
//주사위를 굴리는 프로그램을 작성하고 랜덤넘버를 만드는 방법을 알아본다.
//
//변수값의 교환과 레퍼런스
//----------------------------------------------------------------------------------

#pragma warning(disable:4996)
#include <iostream>	
#include <random>
#include "save.h"	
using namespace std;

//[문제] 주사위 값을 1000개 만들어서
// 각 숫자가 몇 번 나오는지 출력하라.
// 각 숫자가 나오는 확률도 출력하자.
// 확률분포가 uniform한것을 확인할 수 있는가?

int main()
{
	//psedu(가짜) 랜덤함수 
	random_device rd;	//- 시드값에 추적하기 힘든 값을 넣어준다.

	default_random_engine dre	{rd()};
	uniform_int_distribution<> uid; 

	cout << uid(dre)<<'\n';
	cout << uid(dre) << '\n';
	cout << uid(dre) << '\n';

	save("소스.cpp");
}



----------------------------------------------
소스.cpp - 2020-09-21 오후 2:36:10 - (월요일)
----------------------------------------------

//----------------------------------------------------------------------------------
//2020.2학기 C++															(3주1일)
//
//주사위를 굴리는 프로그램을 작성하고 랜덤넘버를 만드는 방법을 알아본다.
//
//변수값의 교환과 레퍼런스
//----------------------------------------------------------------------------------

#pragma warning(disable:4996)
#include <iostream>	
#include <random>
#include "save.h"	
using namespace std;



int main()
{
	//psedu(가짜) 랜덤함수 
	random_device rd;	//- 시드값에 추적하기 힘든 값을 넣어준다. (마우스 위치나 cpu온도 등등)

	default_random_engine dre	{rd()};
	uniform_int_distribution<> uid; 

	cout << uid(dre)<<'\n';
	cout << uid(dre) << '\n';
	cout << uid(dre) << '\n';

	save("소스.cpp");
}



----------------------------------------------
소스.cpp - 2020-09-21 오후 2:40:23 - (월요일)
----------------------------------------------

//----------------------------------------------------------------------------------
//2020.2학기 C++															(3주1일)
//
//주사위를 굴리는 프로그램을 작성하고 랜덤넘버를 만드는 방법을 알아본다.
//
//변수값의 교환과 레퍼런스
//----------------------------------------------------------------------------------

#pragma warning(disable:4996)
#include <iostream>	
#include <random>
#include "save.h"	
using namespace std;

//[문제] 학생 100명의 시험점수 평균을 구하려고 한다.
// 100명의 점수를 임의의 값(최저 0에서 최고 100점까지) 으로 설정하라.
// 평균값을 구하여 출력하라.

int main()
{
	//psedu(가짜) 랜덤함수 
	random_device rd;	//- 시드값에 추적하기 힘든 값을 넣어준다. (마우스 위치나 cpu온도 등등)

	default_random_engine dre	{rd()};
	uniform_int_distribution<> uid; 

	int sum = 0;

	for (int i = 0; i < 100; ++i)
		sum += uid(dre) % 101;

	cout << "100명의 학생들의 평균점수는 " << sum / 100 << '\n';

	save("소스.cpp");
}



----------------------------------------------
소스.cpp - 2020-09-21 오후 2:40:34 - (월요일)
----------------------------------------------

//----------------------------------------------------------------------------------
//2020.2학기 C++															(3주1일)
//
//주사위를 굴리는 프로그램을 작성하고 랜덤넘버를 만드는 방법을 알아본다.
//
//변수값의 교환과 레퍼런스
//----------------------------------------------------------------------------------

#pragma warning(disable:4996)
#include <iostream>	
#include <random>
#include "save.h"	
using namespace std;

//[문제] 학생 100명의 시험점수 평균을 구하려고 한다.
// 100명의 점수를 임의의 값(최저 0에서 최고 100점까지) 으로 설정하라.
// 평균값을 구하여 출력하라.

int main()
{
	//psedu(가짜) 랜덤함수 
	random_device rd;	//- 시드값에 추적하기 힘든 값을 넣어준다. (마우스 위치나 cpu온도 등등)

	default_random_engine dre	{rd()};
	uniform_int_distribution<> uid; 

	int sum = 0;

	for (int i = 0; i < 100; ++i)
		sum += uid(dre) % 101;

	cout << "100명의 학생들의 평균점수는 " << sum / 100 << '\n';

	save("소스.cpp");
}



----------------------------------------------
소스.cpp - 2020-09-21 오후 2:41:32 - (월요일)
----------------------------------------------

//----------------------------------------------------------------------------------
//2020.2학기 C++															(3주1일)
//
//주사위를 굴리는 프로그램을 작성하고 랜덤넘버를 만드는 방법을 알아본다.
//
//변수값의 교환과 레퍼런스
//----------------------------------------------------------------------------------

#pragma warning(disable:4996)
#include <iostream>	
#include <random>
#include "save.h"	
using namespace std;

//[문제] 학생 100명의 시험점수 평균을 구하려고 한다.
// 100명의 점수를 임의의 값(최저 0에서 최고 100점까지) 으로 설정하라.
// 평균값을 구하여 출력하라.

int main()
{
	//psedu(가짜) 랜덤함수 
	random_device rd;	//- 시드값에 추적하기 힘든 값을 넣어준다. (마우스 위치나 cpu온도 등등)

	default_random_engine dre	{rd()};
	uniform_int_distribution<> uid; 

	int sum = 0;

	for (int i = 0; i < 100; ++i)
		sum += uid(dre) % 101;

	cout << "100명의 학생들의 평균점수는 " << sum / 100. << '\n';

	save("소스.cpp");
}



----------------------------------------------
소스.cpp - 2020-09-21 오후 2:42:03 - (월요일)
----------------------------------------------

//----------------------------------------------------------------------------------
//2020.2학기 C++															(3주1일)
//
//주사위를 굴리는 프로그램을 작성하고 랜덤넘버를 만드는 방법을 알아본다.
//
//변수값의 교환과 레퍼런스
//----------------------------------------------------------------------------------

#pragma warning(disable:4996)
#include <iostream>	
#include <random>
#include "save.h"	
using namespace std;

//[문제] 학생 100명의 시험점수 평균을 구하려고 한다.
// 100명의 점수를 임의의 값(최저 0에서 최고 100점까지) 으로 설정하라.
// 평균값을 구하여 출력하라.

int main()
{
	//psedu(가짜) 랜덤함수 
	random_device rd;	//- 시드값에 추적하기 힘든 값을 넣어준다. (마우스 위치나 cpu온도 등등)

	default_random_engine dre	{rd()};
	uniform_int_distribution<> uid; 

	int sum = 0;

	for (int i = 0; i < 100; ++i)
		sum += uid(dre) % 101;

	cout << "100명의 학생들의 평균점수는 " <<  (double)sum / 100 << '\n';

	save("소스.cpp");
}



----------------------------------------------
소스.cpp - 2020-09-21 오후 2:42:21 - (월요일)
----------------------------------------------

//----------------------------------------------------------------------------------
//2020.2학기 C++															(3주1일)
//
//주사위를 굴리는 프로그램을 작성하고 랜덤넘버를 만드는 방법을 알아본다.
//
//변수값의 교환과 레퍼런스
//----------------------------------------------------------------------------------

#pragma warning(disable:4996)
#include <iostream>	
#include <random>
#include "save.h"	
using namespace std;

//[문제] 학생 100명의 시험점수 평균을 구하려고 한다.
// 100명의 점수를 임의의 값(최저 0에서 최고 100점까지) 으로 설정하라.
// 평균값을 구하여 출력하라.

int main()
{
	//psedu(가짜) 랜덤함수 
	random_device rd;	//- 시드값에 추적하기 힘든 값을 넣어준다. (마우스 위치나 cpu온도 등등)

	default_random_engine dre	;
	uniform_int_distribution<> uid; 

	int sum = 0;

	for (int i = 0; i < 100; ++i)
		sum += uid(dre) % 101;

	cout << "100명의 학생들의 평균점수는 " <<  (double)sum / 100 << '\n';

	save("소스.cpp");
}//



----------------------------------------------
소스.cpp - 2020-09-21 오후 2:45:30 - (월요일)
----------------------------------------------

//----------------------------------------------------------------------------------
//2020.2학기 C++															(3주1일)
//
//주사위를 굴리는 프로그램을 작성하고 랜덤넘버를 만드는 방법을 알아본다.
//
//변수값의 교환과 레퍼런스
//----------------------------------------------------------------------------------

#pragma warning(disable:4996)
#include <iostream>	
#include <random>
#include "save.h"	
using namespace std;

//[문제] 학생 100명의 시험점수 평균을 구하려고 한다.
// 100명의 점수를 임의의 값(최저 0에서 최고 100점까지) 으로 설정하라.
// 평균값을 구하여 출력하라.

int main()
{
	default_random_engine dre;
	uniform_int_distribution<> uid {0,100};

	int sum = 0;

	for (int i = 0; i < 100; ++i)
		sum += uid(dre);

	cout << "100명의 학생들의 평균점수는 " <<  (double)sum / 100 << '\n';

	save("소스.cpp");
}



----------------------------------------------
소스.cpp - 2020-09-21 오후 2:46:59 - (월요일)
----------------------------------------------

//----------------------------------------------------------------------------------
//2020.2학기 C++															(3주1일)
//
//주사위를 굴리는 프로그램을 작성하고 랜덤넘버를 만드는 방법을 알아본다.
//
//변수값의 교환과 레퍼런스
//----------------------------------------------------------------------------------

#pragma warning(disable:4996)
#include <iostream>	
#include <random>
#include "save.h"	
using namespace std;

//[문제] 학생 100명의 시험점수 평균을 구하려고 한다.
// 100명의 점수를 임의의 값(최저 0에서 최고 100점까지) 으로 설정하라.
// 평균값을 구하여 출력하라.

int main()
{
	default_random_engine dre;
	uniform_int_distribution<> uid {0,100};

	int sum = 0;

	for (int i = 0; i < 100; ++i)
		sum += uid(dre);

	cout << "100명의 학생들의 평균점수는 " <<  static_cast<double>(sum) / 100 << '\n';

	save("소스.cpp");
}



----------------------------------------------
소스.cpp - 2020-09-21 오후 2:47:43 - (월요일)
----------------------------------------------

//----------------------------------------------------------------------------------
//2020.2학기 C++															(3주1일)
//
//주사위를 굴리는 프로그램을 작성하고 랜덤넘버를 만드는 방법을 알아본다.
//
//변수값의 교환과 레퍼런스
//----------------------------------------------------------------------------------

#pragma warning(disable:4996)
#include <iostream>	
#include <random>
#include "save.h"	
using namespace std;

//[문제] 학생 1000명의 시험점수 평균을 구하려고 한다.
// 100명의 점수를 임의의 값(최저 0에서 최고 100점까지) 으로 설정하라.
// 평균값을 구하여 출력하라.

int main()
{
	default_random_engine dre;
	uniform_int_distribution<> uid {0,100};

	int sum = 0;

	for (int i = 0; i < 1000; ++i)
		sum += uid(dre);

	cout << "100명의 학생들의 평균점수는 " <<  static_cast<double>(sum) / 100 << '\n';

	save("소스.cpp");
}



----------------------------------------------
소스.cpp - 2020-09-21 오후 2:48:02 - (월요일)
----------------------------------------------

//----------------------------------------------------------------------------------
//2020.2학기 C++															(3주1일)
//
//주사위를 굴리는 프로그램을 작성하고 랜덤넘버를 만드는 방법을 알아본다.
//
//변수값의 교환과 레퍼런스
//----------------------------------------------------------------------------------

#pragma warning(disable:4996)
#include <iostream>	
#include <random>
#include "save.h"	
using namespace std;

//[문제] 학생 1000명의 시험점수 평균을 구하려고 한다.
// 100명의 점수를 임의의 값(최저 0에서 최고 100점까지) 으로 설정하라.
// 평균값을 구하여 출력하라.

int main()
{
	default_random_engine dre;
	uniform_int_distribution<> uid {0,100};

	int sum = 0;

	for (int i = 0; i < 1000; ++i)
		sum += uid(dre);

	cout << "100명의 학생들의 평균점수는 " <<  static_cast<double>(sum) / 1000 << '\n';

	save("소스.cpp");
}



----------------------------------------------
소스.cpp - 2020-09-21 오후 2:51:25 - (월요일)
----------------------------------------------

//----------------------------------------------------------------------------------
//2020.2학기 C++															(3주1일)
//
//주사위를 굴리는 프로그램을 작성하고 랜덤넘버를 만드는 방법을 알아본다.
//
//변수값의 교환과 레퍼런스
//----------------------------------------------------------------------------------

#pragma warning(disable:4996)
#include <iostream>	
#include <random>
#include "save.h"	
using namespace std;

//[문제] 학생 1000명의 시험점수 평균을 구하려고 한다.
// 100명의 점수를 임의의 값(최저 0에서 최고 100점까지) 으로 설정하라.
// 평균값을 구하여 출력하라.

int main()
{
	default_random_engine dre;
	uniform_int_distribution<> uid {0,100};

	int sum = 0;

	for (int i = 0; i < 1000; ++i)		//hard coding: 코드가 여기서만 유효하단 말
		sum += uid(dre);

	cout << "100명의 학생들의 평균점수는 " <<  static_cast<double>(sum) / 1000 << '\n';

	save("소스.cpp");
}



----------------------------------------------
소스.cpp - 2020-09-21 오후 2:54:15 - (월요일)
----------------------------------------------

//----------------------------------------------------------------------------------
//2020.2학기 C++															(3주1일)
//
//주사위를 굴리는 프로그램을 작성하고 랜덤넘버를 만드는 방법을 알아본다.
//
//변수값의 교환과 레퍼런스
//----------------------------------------------------------------------------------

#pragma warning(disable:4996)
#include <iostream>	
#include <random>
#include "save.h"	
using namespace std;

//[문제] 학생 123명의 시험점수 평균을 구하려고 한다.
// 100명의 점수를 임의의 값(최저 0에서 최고 100점까지) 으로 설정하라.
// 평균값을 구하여 출력하라.

int main()
{
	default_random_engine dre;
	uniform_int_distribution<> uid {0,100};

	int student[123];

	//range for loop - 범위기반의 for loop 사용법을 찾아보자
	for (int& score:student)	
		score += uid(dre);

	int sum {0};

	for (int n : student)
		sum += n;

	cout << "100명의 학생들의 평균점수는 " <<  static_cast<double>(sum) / 123 << '\n';

	save("소스.cpp");
}



----------------------------------------------
소스.cpp - 2020-09-21 오후 2:54:42 - (월요일)
----------------------------------------------

//----------------------------------------------------------------------------------
//2020.2학기 C++															(3주1일)
//
//주사위를 굴리는 프로그램을 작성하고 랜덤넘버를 만드는 방법을 알아본다.
//
//변수값의 교환과 레퍼런스
//----------------------------------------------------------------------------------

#pragma warning(disable:4996)
#include <iostream>	
#include <random>
#include "save.h"	
using namespace std;

//[문제] 학생 123명의 시험점수 평균을 구하려고 한다.
// 100명의 점수를 임의의 값(최저 0에서 최고 100점까지) 으로 설정하라.
// 평균값을 구하여 출력하라.

int main()
{
	default_random_engine dre;
	uniform_int_distribution<> uid {0,100};

	int student[123];

	//range for loop - 범위기반의 for loop 사용법을 찾아보자
	for (int& score:student)	
		score = uid(dre);

	int sum {0};

	for (int n : student)
		sum += n;

	cout << "100명의 학생들의 평균점수는 " <<  static_cast<double>(sum) / 123 << '\n';

	save("소스.cpp");
}



----------------------------------------------
소스.cpp - 2020-09-21 오후 2:56:11 - (월요일)
----------------------------------------------

//----------------------------------------------------------------------------------
//2020.2학기 C++															(3주1일)
//
//주사위를 굴리는 프로그램을 작성하고 랜덤넘버를 만드는 방법을 알아본다.
//
//변수값의 교환과 레퍼런스
//----------------------------------------------------------------------------------

#pragma warning(disable:4996)
#include <iostream>	
#include <random>
#include "save.h"	
using namespace std;

//[문제] 학생 1000명의 시험점수 평균을 구하려고 한다.
// 100명의 점수를 임의의 값(최저 0에서 최고 100점까지) 으로 설정하라.
// 평균값을 구하여 출력하라.

int main()
{
	default_random_engine dre;
	uniform_int_distribution<> uid {0,100};

	int student[1000];

	//range for loop - 범위기반의 for loop 사용법을 찾아보자
	for (int& score:student)	
		score = uid(dre);

	int sum {0};

	for (int n : student)
		sum += n;

	cout << "100명의 학생들의 평균점수는 " <<  static_cast<double>(sum) / 1000 << '\n';

	save("소스.cpp");
}



----------------------------------------------
소스.cpp - 2020-09-21 오후 2:58:48 - (월요일)
----------------------------------------------

//----------------------------------------------------------------------------------
//2020.2학기 C++															(3주1일)
//
//주사위를 굴리는 프로그램을 작성하고 랜덤넘버를 만드는 방법을 알아본다.
//
//정수의 수를 늘려가며 메모리 이해를 해 본다.
//
//[다음시간]변수값의 교환과 레퍼런스
//----------------------------------------------------------------------------------

#pragma warning(disable:4996)
#include <iostream>	
#include <random>
#include "save.h"	
using namespace std;

//[문제] 학생 1000명의 시험점수 평균을 구하려고 한다.
// 100명의 점수를 임의의 값(최저 0에서 최고 100점까지) 으로 설정하라.
// 평균값을 구하여 출력하라.

int main()
{
	default_random_engine dre;
	uniform_int_distribution<> uid {0,100};

	int student[1000];

	//range for loop - 범위기반의 for loop 사용법을 찾아보자 => 유지보수에 좋음!
	for (int& score:student)	
		score = uid(dre);

	int sum {0};

	for (int n : student)
		sum += n;

	cout << "100명의 학생들의 평균점수는 " <<  static_cast<double>(sum) / 1000 << '\n';

	save("소스.cpp");
}



----------------------------------------------
소스.cpp - 2020-09-21 오후 5:52:22 - (월요일)
----------------------------------------------

//----------------------------------------------------------------------------------
//2020.2학기 C++															(3주2일)
//
//변수값의 교환과 레퍼런스
// *(포안터)는 왜 사용하지?
// &(레퍼런스)는 왜 사용하지?
//----------------------------------------------------------------------------------

#pragma warning(disable:4996)
#include <iostream>	
#include "save.h"	
using namespace std;

int main()
{
	

	save("소스.cpp");
}



----------------------------------------------
소스.cpp - 2020-09-21 오후 5:56:33 - (월요일)
----------------------------------------------

//----------------------------------------------------------------------------------
//2020.2학기 C++															(3주2일)
//
//변수값의 교환과 레퍼런스
// *(포안터)는 왜 사용하지?
// &(레퍼런스)는 왜 사용하지?
//----------------------------------------------------------------------------------

#pragma warning(disable:4996)
#include <iostream>	
#include "save.h"	
using namespace std;

//[문제] 프로그램의 의도대로 코딩한 후 결과를 답지에 적어라.	배점[10]

int main()
{
	int a{ 1 }, b{ 2 };
	//원하는데로 코딩해보자

	cout << a << ", " << endl;	//1, 2

	save("소스.cpp");
}



----------------------------------------------
소스.cpp - 2020-09-21 오후 5:56:55 - (월요일)
----------------------------------------------

//----------------------------------------------------------------------------------
//2020.2학기 C++															(3주2일)
//
//변수값의 교환과 레퍼런스
// *(포안터)는 왜 사용하지?
// &(레퍼런스)는 왜 사용하지?
//----------------------------------------------------------------------------------

#pragma warning(disable:4996)
#include <iostream>	
#include "save.h"	
using namespace std;

//[문제] 프로그램의 의도대로 코딩한 후 결과를 답지에 적어라.	배점[10]

int main()
{
	int a{ 1 }, b{ 2 };
	//원하는데로 코딩해보자

	cout << a << ", " << b << endl;	//1, 2

	save("소스.cpp");
}



----------------------------------------------
소스.cpp - 2020-09-21 오후 5:58:00 - (월요일)
----------------------------------------------

//----------------------------------------------------------------------------------
//2020.2학기 C++															(3주2일)
//
//변수값의 교환과 레퍼런스
// *(포안터)는 왜 사용하지?
// &(레퍼런스)는 왜 사용하지?
//----------------------------------------------------------------------------------

#pragma warning(disable:4996)
#include <iostream>	
#include "save.h"	
using namespace std;

//[문제] 프로그램의 의도대로 코딩한 후 결과를 답지에 적어라.	배점[10]

int main()
{
	int a{ 1 }, b{ 2 };
	//원하는데로 코딩해보자

	//cout결과 2, 1을 출력하게 하여라.
	cout << a << ", " << b << endl;	//1, 2
	cout << b << ", " << a;

	save("소스.cpp");
}



----------------------------------------------
소스.cpp - 2020-09-21 오후 5:59:21 - (월요일)
----------------------------------------------

//----------------------------------------------------------------------------------
//2020.2학기 C++															(3주2일)
//
//변수값의 교환과 레퍼런스
// *(포안터)는 왜 사용하지?
// &(레퍼런스)는 왜 사용하지?
//----------------------------------------------------------------------------------

#pragma warning(disable:4996)
#include <iostream>	
#include "save.h"	
using namespace std;

//[문제] 프로그램의 의도대로 코딩한 후 결과를 답지에 적어라.	배점[10]

int main()
{
	int a{ 1 }, b{ 2 };
	//원하는데로 코딩해보자

	//다음줄의 cout결과 2, 1을 출력하게 하여라.
	cout << a << ", " << b << endl;	//1, 2
	cout << b << ", " << a << endl;

	save("소스.cpp");
}



----------------------------------------------
소스.cpp - 2020-09-21 오후 6:01:16 - (월요일)
----------------------------------------------

//----------------------------------------------------------------------------------
//2020.2학기 C++															(3주2일)
//
//변수값의 교환과 레퍼런스
// *(포안터)는 왜 사용하지?
// &(레퍼런스)는 왜 사용하지?
//----------------------------------------------------------------------------------

#pragma warning(disable:4996)
#include <iostream>	
#include "save.h"	
using namespace std;

//[문제] 프로그램의 의도대로 코딩한 후 결과를 답지에 적어라.	배점[10]

int main()
{
	int a{ 1 }, b{ 2 };
	//원하는데로 코딩해보자
	int temp{ a };
	a = { b };
	b = temp;

	//다음줄의 cout결과 2, 1을 출력하게 하여라.
	cout << a << ", " << b << endl;	


	save("소스.cpp");
}



----------------------------------------------
소스.cpp - 2020-09-21 오후 6:02:45 - (월요일)
----------------------------------------------

//----------------------------------------------------------------------------------
//2020.2학기 C++															(3주2일)
//
//변수값의 교환과 레퍼런스
// *(포안터)는 왜 사용하지?
// &(레퍼런스)는 왜 사용하지?
//----------------------------------------------------------------------------------

#pragma warning(disable:4996)
#include <iostream>	
#include "save.h"	
using namespace std;

//[문제] 프로그램의 의도대로 코딩한 후 결과를 답지에 적어라.	배점[10]

int main()
{
	int a{ 1 }, b{ 2 };
	//원하는데로 코딩해보자
	a++; b--;

	//다음줄의 cout결과 2, 1을 출력하게 하여라.
	cout << a << ", " << b << endl;	


	save("소스.cpp");
}



----------------------------------------------
소스.cpp - 2020-09-21 오후 6:07:12 - (월요일)
----------------------------------------------

//----------------------------------------------------------------------------------
//2020.2학기 C++															(3주2일)
//
//변수값의 교환과 레퍼런스
// *(포안터)는 왜 사용하지?
// &(레퍼런스)는 왜 사용하지?
//----------------------------------------------------------------------------------

#pragma warning(disable:4996)
#include <iostream>	
#include "save.h"	
using namespace std;

//[문제] a와 b의 값을 바꿔라			 배점[10]

int main()
{
	int a{ 10 }, b{ 20 };
	//원하는데로 코딩해보자
	int temp{ a };
	a = b;
	b = temp;
	//다음줄의 cout결과 a,b가 서로바뀐 값아 출력된다.
	cout << a << ", " << b << endl;	


	save("소스.cpp");
}



----------------------------------------------
소스.cpp - 2020-09-21 오후 6:09:50 - (월요일)
----------------------------------------------

//----------------------------------------------------------------------------------
//2020.2학기 C++															(3주2일)
//
//변수값의 교환과 레퍼런스
// *(포안터)는 왜 사용하지?
// &(레퍼런스)는 왜 사용하지?
//----------------------------------------------------------------------------------

#pragma warning(disable:4996)
#include <iostream>	
#include "save.h"	
using namespace std;

//[문제] a와 b의 값을 바꿔라			 배점[10]
// 함수를 호출하여 a,b를 바꾸어라
// 함수를 선언하고 정의하고 호출하라

void swap(int& a, int& b)
{
	int temp{ a };
	a = b;
	b = temp;
}

int main()
{
	int a{ 10 }, b{ 20 };
	//여기서 함수를 호출한다.
	swap(a, b);
	//다음줄의 cout결과 a,b가 서로바뀐 값아 출력된다.
	cout << a << ", " << b << endl;	


	save("소스.cpp");
}



----------------------------------------------
소스.cpp - 2020-09-21 오후 6:13:51 - (월요일)
----------------------------------------------

//----------------------------------------------------------------------------------
//2020.2학기 C++															(3주2일)
//
//변수값의 교환과 레퍼런스
// *(포인터)는 왜 사용하지?
// &(레퍼런스)는 왜 사용하지?
//----------------------------------------------------------------------------------

#pragma warning(disable:4996)
#include <iostream>	
#include "save.h"	
using namespace std;

//[문제] a와 b의 값을 바꿔라			 배점[10]
// 함수를 호출하여 a,b를 바꾸어라
// 함수를 선언하고 정의하고 호출하라

void swap(int* a, int* b)
{
	int temp=* a ;
	*a = *b;
	*b = temp;
}

int main()
{
	int a{ 10 }, b{ 20 };
	//여기서 함수를 호출한다.
	swap(&a, &b);
	//다음줄의 cout결과 a,b가 서로바뀐 값아 출력된다.
	cout << a << ", " << b << endl;

	save("소스.cpp");
}



----------------------------------------------
소스.cpp - 2020-09-21 오후 6:14:25 - (월요일)
----------------------------------------------

//----------------------------------------------------------------------------------
//2020.2학기 C++															(3주2일)
//
//변수값의 교환과 레퍼런스
// *(포안터)는 왜 사용하지?
// &(레퍼런스)는 왜 사용하지?
//----------------------------------------------------------------------------------

#pragma warning(disable:4996)
#include <iostream>	
#include "save.h"	
using namespace std;

//[문제] a와 b의 값을 바꿔라			 배점[10]
// 함수를 호출하여 a,b를 바꾸어라
// 함수를 선언하고 정의하고 호출하라

void swap(int* a, int* b)
{
	int temp=* a ;
	*a = *b;
	*b = temp;
}

int main()
{
	int a{ 10 }, b{ 20 };
	//여기서 함수를 호출한다.
	swap(&a, &b);
	//다음줄의 cout결과 a,b가 서로바뀐 값아 출력된다.
	cout << &a << ", " << &b << endl;
	cout << a << ", " << b << endl;

	save("소스.cpp");
}



----------------------------------------------
소스.cpp - 2020-09-21 오후 6:25:19 - (월요일)
----------------------------------------------

//----------------------------------------------------------------------------------
//2020.2학기 C++															(3주2일)
//
//[9월 28일]1차 시험!
//
//변수값의 교환과 레퍼런스
// *(포안터)는 왜 사용하지?
// &(레퍼런스)는 왜 사용하지?
//----------------------------------------------------------------------------------

#pragma warning(disable:4996)
#include <iostream>	
#include "save.h"	
using namespace std;

//[문제] a와 b의 값을 바꿔라			 배점[10]
// 함수를 호출하여 a,b를 바꾸어라
// 함수를 선언하고 정의하고 호출하라

int main()
{
	int a{ 10 }, b{ 20 };
	// 호출하기전에 함수를 선언하면 컴파일러는 오류를 내지 않는다. - 선언문
	void f(int , int );

	//여기서 함수를 호출한다.
	f(a, b);	//함수 호출											- 호출문				
	//다음줄의 cout결과 a,b가 서로바뀐 값아 출력된다.
	cout << a << ", " << b << endl;

	save("소스.cpp");
}

void f(int a, int b) {			//함수의 정의						- 정의문			

}


----------------------------------------------
소스.cpp - 2020-09-21 오후 6:39:22 - (월요일)
----------------------------------------------

//----------------------------------------------------------------------------------
//2020.2학기 C++															(3주2일)
//
//[9월 28일]1차 시험!
//
//변수값의 교환과 레퍼런스
// *(포안터)는 왜 사용하지?
// &(레퍼런스)는 왜 사용하지?
//----------------------------------------------------------------------------------

#pragma warning(disable:4996)
#include <iostream>	
#include "save.h"	
using namespace std;

void f(int, int); //밖으로 꺼내준다면 다른 함수에서도 사용 가능하다.

//[문제] a와 b의 값을 바꿔라			 배점[10]
// 함수를 호출하여 a,b를 바꾸어라
// 함수를 선언하고 정의하고 호출하라

int main()
{
	int a{ 10 };
	int b{ 20 };

	//여기서 함수를 호출한다.
	f(a, b);	//함수 호출											- 호출문				
	//다음줄의 cout결과 a,b가 서로바뀐 값아 출력된다.
	cout << &a << endl;
	cout << &b << endl; //&a보다 4바이트 적다.

	save("소스.cpp");
}

void f(int a, int b) {			//함수의 정의						- 정의문			

}


----------------------------------------------
소스.cpp - 2020-09-21 오후 6:43:46 - (월요일)
----------------------------------------------

//----------------------------------------------------------------------------------
//2020.2학기 C++															(3주2일)
//
//[9월 28일]1차 시험!
//
//변수값의 교환과 레퍼런스
// *(포안터)는 왜 사용하지?
// &(레퍼런스)는 왜 사용하지?
//----------------------------------------------------------------------------------

#pragma warning(disable:4996)
#include <iostream>	
#include "save.h"	
using namespace std;

void f(int, int); //밖으로 꺼내준다면 다른 함수에서도 사용 가능하다.

//[문제] a와 b의 값을 바꿔라			 배점[10]
// 함수를 호출하여 a,b를 바꾸어라
// 함수를 선언하고 정의하고 호출하라

int main()
{
	int a{ 10 };
	int b{ 20 };

	//여기서 함수를 호출한다.
	f(a, b);	//함수 호출											- 호출문				
	//다음줄의 cout결과 a,b가 서로바뀐 값아 출력된다.
	cout << &a << endl;
	cout << &b << endl; //&a보다 4바이트 적다.

	save("소스.cpp");
}

void f(int a, int b) {			//함수의 정의						- 정의문			
	int temp{ a };
	a = b;
	b = temp;
}


----------------------------------------------
소스.cpp - 2020-09-21 오후 6:46:43 - (월요일)
----------------------------------------------

//----------------------------------------------------------------------------------
//2020.2학기 C++															(3주2일)
//
//[9월 28일]1차 시험!
//
//변수값의 교환과 레퍼런스
// *(포안터)는 왜 사용하지?
// &(레퍼런스)는 왜 사용하지?
//----------------------------------------------------------------------------------

#pragma warning(disable:4996)
#include <iostream>	
#include "save.h"	
using namespace std;

void f(int, int); //밖으로 꺼내준다면 다른 함수에서도 사용 가능하다.

//[문제] a와 b의 값을 바꿔라			 배점[10]
// 함수를 호출하여 a,b를 바꾸어라
// 함수를 선언하고 정의하고 호출하라

int main()
{
	int a{ 10 };
	int b{ 20 };

	//여기서 함수를 호출한다.
	f(a, b);	//함수 호출											- 호출문				
	//다음줄의 cout결과 a,b가 서로바뀐 값아 출력된다.
	cout << a << ", "<<  b <<endl;

	save("소스.cpp");
}

void f(int a, int b) {			//함수의 정의						- 정의문			
	int temp{ a };
	a = b;
	b = temp;
}


----------------------------------------------
소스.cpp - 2020-09-21 오후 6:47:42 - (월요일)
----------------------------------------------

//----------------------------------------------------------------------------------
//2020.2학기 C++															(3주2일)
//
//[9월 28일]1차 시험!
//
//변수값의 교환과 레퍼런스
// *(포안터)는 왜 사용하지?
// &(레퍼런스)는 왜 사용하지?
//----------------------------------------------------------------------------------

#pragma warning(disable:4996)
#include <iostream>	
#include "save.h"	
using namespace std;

//[문제] a와 b의 값을 바꿔라			 배점[10]
// 함수를 호출하여 a,b를 바꾸어라
// 함수를 선언하고 정의하고 호출하라

void swap(int& a, int& b)
{
	int temp= a ;
	a = b;
	b = temp;
}

int main()
{
	int a{ 10 }, b{ 20 };

	//여기서 함수를 호출한다.
	swap(a, b);	//함수 호출
	//다음줄의 cout결과 a,b가 서로바뀐 값아 출력된다.
	cout << a << ", " << b << endl;

	save("소스.cpp");
}



----------------------------------------------
소스.cpp - 2020-09-21 오후 6:48:52 - (월요일)
----------------------------------------------

//----------------------------------------------------------------------------------
//2020.2학기 C++															(3주2일)
//
//[9월 28일]1차 시험!
//
//변수값의 교환과 레퍼런스
// *(포안터)는 왜 사용하지?
// &(레퍼런스)는 왜 사용하지?
//----------------------------------------------------------------------------------

#pragma warning(disable:4996)
#include <iostream>	
#include "save.h"	
using namespace std;

void f(int*, int*); //밖으로 꺼내준다면 다른 함수에서도 사용 가능하다.

//[문제] a와 b의 값을 바꿔라			 배점[10]
// 함수를 호출하여 a,b를 바꾸어라
// 함수를 선언하고 정의하고 호출하라

int main()
{
	int a{ 10 };
	int b{ 20 };

	//여기서 함수를 호출한다.
	f(&a, &b);	//함수 호출											- 호출문				
	//다음줄의 cout결과 a,b가 서로바뀐 값아 출력된다.
	cout << a << ", "<<  b <<endl;

	save("소스.cpp");
}

void f(int* a, int* b) {			//함수의 정의						- 정의문			
	int temp{ *a };
	*a = *b;
	*b = temp;
}


----------------------------------------------
소스.cpp - 2020-09-21 오후 6:55:23 - (월요일)
----------------------------------------------

//----------------------------------------------------------------------------------
//2020.2학기 C++															(3주2일)
//
//[9월 28일]1차 시험!
//
//변수값의 교환과 레퍼런스
// *(포안터)는 왜 사용하지?		=> 메모리를 원격(다른 저장공간에서)조작(읽고 쓰기)하려고		!!!{하지만 C++은 안쓴다!}
// &(레퍼런스)는 왜 사용하지?	
//----------------------------------------------------------------------------------

#pragma warning(disable:4996)
#include <iostream>	
#include "save.h"	
using namespace std;

void f(int*, int*); //밖으로 꺼내준다면 다른 함수에서도 사용 가능하다.

//[문제] a와 b의 값을 바꿔라			 배점[10]
// 함수를 호출하여 a,b를 바꾸어라
// 함수를 선언하고 정의하고 호출하라

int main()
{
	int a{ 10 };
	int b{ 20 };

	//여기서 함수를 호출한다.
	f(&a, &b);	//함수 호출											- 호출문				
	//다음줄의 cout결과 a,b가 서로바뀐 값아 출력된다.
	cout << a << ", "<<  b <<endl;

	save("소스.cpp");
}

void f(int* a, int* b) {			//함수의 정의						- 정의문			
	int temp{ *a };
	*a = *b;
	*b = temp;
}				//[포인트]는 멀리서 값을 원격조종하기 위해서 사용한다!


----------------------------------------------
소스.cpp - 2020-09-21 오후 6:59:42 - (월요일)
----------------------------------------------

//----------------------------------------------------------------------------------
//2020.2학기 C++															(3주2일)
//
//[9월 28일]1차 시험!
//
//변수값의 교환과 레퍼런스
// *(포안터)는 왜 사용하지?		=> 메모리를 원격(다른 저장공간에서)조작(읽고 쓰기)하려고		!!!{하지만 C++은 안쓴다!}
// &(레퍼런스)는 왜 사용하지?	
//----------------------------------------------------------------------------------

#pragma warning(disable:4996)
#include <iostream>	
#include "save.h"	
using namespace std;

void f(int&, int&);

//[문제] a와 b의 값을 바꿔라			 배점[10]
// 함수를 호출하여 a,b를 바꾸어라
// 함수를 선언하고 정의하라
// + main은 변경하지말고

int main()
{
	int a{ 10 };
	int b{ 20 };

	//여기서 함수를 호출한다.
	f(a, b);												
	//다음줄의 cout결과 a,b가 서로바뀐 값아 출력된다.
	cout << a << ", "<<  b <<endl;

	save("소스.cpp");
}		

void f(int& x, int& y)
{
	int temp{ x };
	x = y;
	y = temp;
}


----------------------------------------------
소스.cpp - 2020-09-21 오후 7:05:02 - (월요일)
----------------------------------------------

//----------------------------------------------------------------------------------
//2020.2학기 C++															(3주2일)
//
//[9월 28일]1차 시험!
//
//변수값의 교환과 레퍼런스
// *(포안터)는 왜 사용하지?		=> 메모리를 원격(다른 저장공간에서)조작(읽고 쓰기)하려고		!!!{하지만 C++은 안쓴다!}
// &(레퍼런스)는 왜 사용하지?	=> 
//----------------------------------------------------------------------------------

#pragma warning(disable:4996)
#include <iostream>	
#include "save.h"	
using namespace std;


int main()
{
	int a = 1;
	int* p = &a;
	*p = 20;

	cout << a << endl;

	save("소스.cpp");
}		


----------------------------------------------
소스.cpp - 2020-09-21 오후 7:07:41 - (월요일)
----------------------------------------------

//----------------------------------------------------------------------------------
//2020.2학기 C++															(3주2일)
//
//[9월 28일]1차 시험!
//
//변수값의 교환과 레퍼런스
// *(포안터)는 왜 사용하지?		=> 메모리를 원격(다른 저장공간에서)조작(읽고 쓰기)하려고		!!!{하지만 C++은 안쓴다!}
// &(레퍼런스)는 왜 사용하지?	=> 
//----------------------------------------------------------------------------------

#pragma warning(disable:4996)
#include <iostream>	
#include "save.h"	
using namespace std;


int main()
{
	int a = 1;
	int& r = a;
	r = 20;

	cout << a << endl;

	save("소스.cpp");
}		


----------------------------------------------
소스.cpp - 2020-09-21 오후 7:08:02 - (월요일)
----------------------------------------------

//----------------------------------------------------------------------------------
//2020.2학기 C++															(3주2일)
//
//[9월 28일]1차 시험!
//
//변수값의 교환과 레퍼런스
// *(포안터)는 왜 사용하지?		=> 메모리를 원격(다른 저장공간에서)조작(읽고 쓰기)하려고		!!!{하지만 C++은 안쓴다!}
// &(레퍼런스)는 왜 사용하지?	=> 
//----------------------------------------------------------------------------------

#pragma warning(disable:4996)
#include <iostream>	
#include "save.h"	
using namespace std;


int main()
{
	int a = 1;
	int& r = a;
	r = 20;

	cout << a << endl;

	save("소스.cpp");
}		


----------------------------------------------
소스.cpp - 2020-09-21 오후 7:12:26 - (월요일)
----------------------------------------------

//----------------------------------------------------------------------------------
//2020.2학기 C++															(3주2일)
//
//[9월 28일]1차 시험!
//
//변수값의 교환과 레퍼런스
// *(포안터)는 왜 사용하지?		=> 메모리를 원격(다른 저장공간에서)조작(읽고 쓰기)하려고		!!!{하지만 C++은 안쓴다!}
// &(레퍼런스)는 왜 사용하지?	=> 
//----------------------------------------------------------------------------------

#pragma warning(disable:4996)
#include <iostream>	
#include "save.h"	
using namespace std;


int main()
{
	int a = 1;
	int& r = a;	//a를 r로 불러도 되지? 하는 동작 => alias (별명)
	r = 20;

	cout << a << endl;

	save("소스.cpp");
}		


----------------------------------------------
소스.cpp - 2020-09-21 오후 7:14:57 - (월요일)
----------------------------------------------

//----------------------------------------------------------------------------------
//2020.2학기 C++															(3주2일)
//
//[9월 28일]1차 시험!
//
//변수값의 교환과 레퍼런스
// *(포안터)는 왜 사용하지?		=> 메모리를 원격(다른 저장공간에서)조작(읽고 쓰기)하려고		!!!{하지만 C++은 안쓴다!}
// &(레퍼런스)는 왜 사용하지?	=> 객체를 복사하지않고!!! 변경이 가능하다!
//----------------------------------------------------------------------------------

#pragma warning(disable:4996)
#include <iostream>	
#include "save.h"	
using namespace std;


int main()
{
	int a = 1;
	int& r = a;	//a를 r로 불러도 되지? 하는 동작 => alias (별명)
	//int& r은 주소를 지명하는것이므로 메모리를 "따로!" 할당하지않는다. 
	//따라서 int* r; 과 다르게 int& r;이 안된다.

	r = 20;

	cout << a << endl;

	save("소스.cpp");
}		


----------------------------------------------
소스.cpp - 2020-09-21 오후 7:17:37 - (월요일)
----------------------------------------------

//----------------------------------------------------------------------------------
//2020.2학기 C++															(3주2일)
//
//[9월 28일]1차 시험!
//
//변수값의 교환과 레퍼런스
// *(포인터)는 왜 사용하지?		=> 메모리를 원격(다른 저장공간에서)조작(읽고 쓰기)하려고		!!!{하지만 C++은 안쓴다!}
// &(레퍼런스)는 왜 사용하지?	=> 객체를 복사하지않고!!! 변경이 가능하다!
//----------------------------------------------------------------------------------

#pragma warning(disable:4996)
#include <iostream>	
#include "save.h"	
using namespace std;

//[다음시간문제] 함수를 호출하여 a의 값을 2배로 변경하라.
//	함수를 선언,정의,호출하는 코드를 답지에 적어라.

int main()
{
	int a[]{ 1,2,3,4,5 };

	//함수 호출

	for (int num : a)
		cout << num << ' ';
	
		cout << endl;

	save("소스.cpp");
}		


----------------------------------------------
소스.cpp - 2020-09-21 오후 10:44:16 - (월요일)
----------------------------------------------

//----------------------------------------------------------------------------------
//2020.2학기 C++															(3주2일)
//
//[9월 28일]1차 시험!
//
//변수값의 교환과 레퍼런스
// *(포인터)는 왜 사용하지?		=> 메모리를 원격(다른 저장공간에서)조작(읽고 쓰기)하려고		!!!{하지만 C++은 안쓴다!}
// &(레퍼런스)는 왜 사용하지?	=> 객체를 복사하지않고!!! 변경이 가능하다!
//----------------------------------------------------------------------------------

#pragma warning(disable:4996)
#include <iostream>	
#include "save.h"	
using namespace std;

void f(int [],int);

//[다음시간문제] 함수를 호출하여 a의 값을 2배로 변경하라.
//	함수를 선언,정의,호출하는 코드를 답지에 적어라.

int main()
{
	int a[]{ 1,2,3,4,5 };

	//함수 호출
	f(a,sizeof(a)/sizeof(int));

	for (int num : a)
		cout << num << ' ';
	
		cout << endl;

	save("소스.cpp");
}		

void f(int a[],int b)
{
	for (int i = b; i > 0; --i)
		a[i-1] = a[i-1] * 2;
}