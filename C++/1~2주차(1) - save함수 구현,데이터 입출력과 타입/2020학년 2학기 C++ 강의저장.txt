//----------------------------------------------------------------------------------
//2020.2학기 C++															(1주1일)
//강의 소개 - 객체지향(OOP)으로서의 C++
//			  시험 3번(5주마다), 출석(1/4결석, 8일 결석 F)
//            출석 점수는 따로 반영 안함.
// - VS 2019 사용
// [목표]코드를 저장해보자
//----------------------------------------------------------------------------------

/*#include <iostream>
#include <fstream>

int main()
{
	//[문제]먼저 파일을 읽어 출력해보자.

	std::ifstream in{ "소스.cpp" };	//in아라는 변수에 "소스.cpp:"를 저장할꺼야

	if (!in) {
		std::cout << "파일을 열수 없습니다\n";
		return 0;
	}

	int c;

	while ((c = in.get()) != EOF)
	{
		std::cout << static_cast<char> (c);
	}
}*/

//----------------------------------------------------------------------------------
//2020.2학기 C++															(1주2일)
// [목표]실행될때마다 원하는 파일을 하드디스크에 저장해보자
//----------------------------------------------------------------------------------

#include <iostream>
#include <fstream>

int main()
{
	//[문제]먼저 파일을 읽어 출력해보자.

	std::ifstream in{ "소스.cpp" };
	std::ofstream out{ "2020학년 2학기 C++ 강의저장.txt" };

	if (!in) {
		std::cout << "파일을 열수 없습니다\n";
		return 0;
	}

	int c;

	while ((c = in.get()) != EOF)
		out.put( c );	//객체에 out에 연결된 파일에 출력

	std::cout << "소스.cpp를 2020학년 2학기 C++ 강의저장.txt에 저장하였습니다.\n";
}//----------------------------------------------------------------------------------
//2020.2학기 C++															(1주1일)
//강의 소개 - 객체지향(OOP)으로서의 C++
//			  시험 3번(5주마다), 출석(1/4결석, 8일 결석 F)
//            출석 점수는 따로 반영 안함.
// - VS 2019 사용
// [목표]코드를 저장해보자
//----------------------------------------------------------------------------------

/*#include <iostream>
#include <fstream>

int main()
{
	//[문제]먼저 파일을 읽어 출력해보자.

	std::ifstream in{ "소스.cpp" };	//in아라는 변수에 "소스.cpp:"를 저장할꺼야

	if (!in) {
		std::cout << "파일을 열수 없습니다\n";
		return 0;
	}

	int c;

	while ((c = in.get()) != EOF)
	{
		std::cout << static_cast<char> (c);
	}
}*/

//----------------------------------------------------------------------------------
//2020.2학기 C++															(1주2일)
// [목표]실행될때마다 원하는 파일을 하드디스크에 저장해보자
//----------------------------------------------------------------------------------

#include <iostream>
#include <fstream>

int main()
{
	//[문제]먼저 파일을 읽어 출력해보자.

	std::ifstream in{ "소스.cpp" };
	std::ofstream out{ "2020학년 2학기 C++ 강의저장.txt" ,std::ios::app }; //ios::app은 저장시 예전데이터를 보존하고 계속 새로운 데이터를 쌓을수 있도록 해줌

	if (!in) {
		std::cout << "파일을 열수 없습니다\n";
		return 0;
	}

	int c;

	while ((c = in.get()) != EOF)
		out.put( c );	//객체에 out에 연결된 파일에 출력

	std::cout << "소스.cpp를 2020학년 2학기 C++ 강의저장.txt에 저장하였습니다.\n";
}//----------------------------------------------------------------------------------
//2020.2학기 C++															(1주1일)
//강의 소개 - 객체지향(OOP)으로서의 C++
//			  시험 3번(5주마다), 출석(1/4결석, 8일 결석 F)
//            출석 점수는 따로 반영 안함.
// - VS 2019 사용
// [목표]코드를 저장해보자
//----------------------------------------------------------------------------------

/*#include <iostream>
#include <fstream>

int main()
{
	//[문제]먼저 파일을 읽어 출력해보자.

	std::ifstream in{ "소스.cpp" };	//in아라는 변수에 "소스.cpp:"를 저장할꺼야

	if (!in) {
		std::cout << "파일을 열수 없습니다\n";
		return 0;
	}

	int c;

	while ((c = in.get()) != EOF)
	{
		std::cout << static_cast<char> (c);
	}
}*/

//----------------------------------------------------------------------------------
//2020.2학기 C++															(1주2일)
// [목표]실행될때마다 원하는 파일을 하드디스크에 저장해보자
//----------------------------------------------------------------------------------

#include <iostream>
#include <fstream>

int main()
{
	//[문제]먼저 파일을 읽어 출력해보자.

	std::ifstream in{ "소스.cpp" };
	std::ofstream out{ "2020학년 2학기 C++ 강의저장.txt" ,std::ios::app }; //ios::app은 저장시 예전데이터를 보존하고 계속 새로운 데이터를 쌓을수 있도록 해줌

	if (!in) {
		std::cout << "파일을 열수 없습니다\n";
		return 0;
	}

	int c;

	while ((c = in.get()) != EOF)
		out.put( c );	//객체에 out에 연결된 파일에 출력

	std::cout << "소스.cpp를 2020학년 2학기 C++ 강의저장.txt에 저장하였습니다.\n";
}//----------------------------------------------------------------------------------
//2020.2학기 C++															(1주1일)
//강의 소개 - 객체지향(OOP)으로서의 C++
//			  시험 3번(5주마다), 출석(1/4결석, 8일 결석 F)
//            출석 점수는 따로 반영 안함.
// - VS 2019 사용
// [목표]코드를 저장해보자
//----------------------------------------------------------------------------------

/*#include <iostream>
#include <fstream>

int main()
{
	//[문제]먼저 파일을 읽어 출력해보자.

	std::ifstream in{ "소스.cpp" };	//in아라는 변수에 "소스.cpp:"를 저장할꺼야

	if (!in) {
		std::cout << "파일을 열수 없습니다\n";
		return 0;
	}

	int c;

	while ((c = in.get()) != EOF)
	{
		std::cout << static_cast<char> (c);
	}
}*/

//----------------------------------------------------------------------------------
//2020.2학기 C++															(1주2일)
// [목표]실행될때마다 원하는 파일을 하드디스크에 저장해보자
//----------------------------------------------------------------------------------

#include <iostream>
#include <fstream>

int main()
{
	//[문제]먼저 파일을 읽어 출력해보자.

	std::ifstream in{ "소스.cpp" };
	std::ofstream out{ "2020학년 2학기 C++ 강의저장.txt" ,std::ios::app }; //ios::app은 저장시 예전데이터를 보존하고 계속 새로운 데이터를 쌓을수 있도록 해줌

	if (!in) {
		std::cout << "파일을 열수 없습니다\n";
		return 0;
	}

	int c;

	while ((c = in.get()) != EOF)
		out.put( c );	//객체에 out에 연결된 파일에 출력

	std::cout << "소스.cpp를 2020학년 2학기 C++ 강의저장.txt에 저장하였습니다.\n";
}//
// 저장시간 - 2020년 9월 12일 토요일 18:46
//----------------------------------------------------------------------------------
//2020.2학기 C++															(1주2일)
// [목표]실행될때마다 원하는 파일을 하드디스크에 저장해보자
//----------------------------------------------------------------------------------

#include <iostream>
#include <fstream>

int main()
{
	//[문제]먼저 파일을 읽어 출력해보자.

	std::ifstream in{ "소스.cpp" };
	std::ofstream out{ "2020학년 2학기 C++ 강의저장.txt" ,std::ios::app }; //ios::app은 저장시 (덭붙이기모드)예전데이터를 보존하고 계속 새로운 데이터를 쌓을수 있도록 해줌

	if (!in) {
		std::cout << "파일을 열수 없습니다\n";
		return 0;
	}

	int c;

	while ((c = in.get()) != EOF)
		out.put( c );	//객체에 out에 연결된 파일에 출력

	std::cout << "소스.cpp를 2020학년 2학기 C++ 강의저장.txt에 저장하였습니다.\n";
}//
// 저장시간 - 2020년 9월 12일 토요일 18:46
//----------------------------------------------------------------------------------
//2020.2학기 C++															(1주2일)
// [목표]실행될때마다 원하는 파일을 하드디스크에 저장해보자
//       + 저장 시간도 기록해보자
//----------------------------------------------------------------------------------

#pragma warning(disable:4996)
#include <iostream>	// (in/out)입출력 기능은 여기
#include <fstream>	//파일 읽고 쓰기 기능은 여기
#include <chrono>	//시간 관련기능은 여기
#include <iomanip>	//입출력 조작 가능 여기 (put_time함수 포함)

int main()
{
	//std::chrono::system_clock::time_point tp = std::chrono::system_clock::now();
	//time_t ct = std::chrono::system_clock::to_time_t(tp);
	//tm* lt = localtime(&ct);

	//std::cout << lt << std::endl; //저장공간이 나온다

	//복잡한 자료형은 'auto'로
	

	auto tp = std::chrono::system_clock::now();
	auto ct = std::chrono::system_clock::to_time_t(tp);
	auto lt = localtime(&ct);
	
	std::cout.imbue(std::locale("korean"));
	std::cout << std::put_time(lt, "%c - (%A)") << std::endl;

	
	//[문제]먼저 파일을 읽어 출력해보자.

	std::ifstream in{ "소스.cpp" };
	std::ofstream out{ "2020학년 2학기 C++ 강의저장.txt" ,std::ios::app }; //ios::app은 저장시 (덧붙이기모드)예전데이터를 보존하고 계속 새로운 데이터를 쌓을수 있도록 해줌

	if (!in) {
		std::cout << "파일을 열수 없습니다\n";
		return 0;
	}

	int c;

	while ((c = in.get()) != EOF)
		out.put( c );	//객체에 out에 연결된 파일에 출력

	std::cout << "소스.cpp를 2020학년 2학기 C++ 강의저장.txt에 저장하였습니다.\n";
	
}
//
// 저장시간 - 2020년 9월 12일 토요일 18:46
//----------------------------------------------------------------------------------
//2020.2학기 C++															(1주2일)
// [목표]실행될때마다 원하는 파일을 하드디스크에 저장해보자
//       + 저장 시간도 기록해보자
//
// 주의 - 어려워하지 말자. 모르는 것이 당연하다. 몰라도 됨.
//----------------------------------------------------------------------------------

#pragma warning(disable:4996)
#include <iostream>	// (in/out)입출력 기능은 여기
#include <fstream>	//파일 읽고 쓰기 기능은 여기
#include <chrono>	//시간 관련기능은 여기
#include <iomanip>	//입출력 조작 가능 여기 (put_time함수 포함)

int main()
{
	//std::chrono::system_clock::time_point tp = std::chrono::system_clock::now();
	//time_t ct = std::chrono::system_clock::to_time_t(tp);
	//tm* lt = localtime(&ct);

	//std::cout << lt << std::endl; //저장공간이 나온다

	//복잡한 자료형은 'auto'로
	

	auto tp = std::chrono::system_clock::now();
	auto ct = std::chrono::system_clock::to_time_t(tp);
	auto lt = localtime(&ct);
	
	std::cout.imbue(std::locale("korean"));
	std::cout << std::put_time(lt, "%c - (%A)") << std::endl;

	
	//[문제]먼저 파일을 읽어 출력해보자.

	std::ifstream in{ "소스.cpp" };
	std::ofstream out{ "2020학년 2학기 C++ 강의저장.txt" ,std::ios::app }; //ios::app은 저장시 (덧붙이기모드)예전데이터를 보존하고 계속 새로운 데이터를 쌓을수 있도록 해줌

	if (!in) {
		std::cout << "파일을 열수 없습니다\n";
		return 0;
	}

	int c;

	while ((c = in.get()) != EOF)
		out.put( c );	//객체에 out에 연결된 파일에 출력

	std::cout << "소스.cpp를 2020학년 2학기 C++ 강의저장.txt에 저장하였습니다.\n";
	
}
2020-09-13 오전 5:40:15 - (일요일)
//
// 저장시간 - 2020년 9월 12일 토요일 18:46
//----------------------------------------------------------------------------------
//2020.2학기 C++															(1주2일)
// [목표]실행될때마다 원하는 파일을 하드디스크에 저장해보자
//       + 저장 시간도 기록해보자
//
// 주의 - 어려워하지 말자. 모르는 것이 당연하다. 몰라도 됨.
//----------------------------------------------------------------------------------

#pragma warning(disable:4996)
#include <iostream>	// (in/out)입출력 기능은 여기
#include <fstream>	//파일 읽고 쓰기 기능은 여기
#include <chrono>	//시간 관련기능은 여기
#include <iomanip>	//입출력 조작 가능 여기 (put_time함수 포함)

int main()
{
	//[문제]먼저 파일을 읽어 출력해보자.

	//[순서]

	//1.입력파일을 연다.
	std::ifstream in{ "소스.cpp" };

	if (!in) {
		std::cout << "파일을 열수 없습니다\n";
		return 0;
	}

	//2.출력할 파일을 덧붙여 쓰기 모드로 연다.
	std::ofstream out{ "2020학년 2학기 C++ 강의저장.txt" ,std::ios::app }; 

	//3.출력 파일의 시간을 기록한다.
	auto tp = std::chrono::system_clock::now();
	auto ct = std::chrono::system_clock::to_time_t(tp);
	auto lt = localtime(&ct);

	out.imbue(std::locale("korean"));
	out << std::put_time(lt, "%c - (%A)") << std::endl;

	//4.입력파일을 읽어 출력파일에 기록한다.
	int c;

	while ((c = in.get()) != EOF)
		out.put(c);	//객체에 out에 연결된 파일에 출력

	std::cout << "소스.cpp를 2020학년 2학기 C++ 강의저장.txt에 저장하였습니다.\n";
	
}
657,930----------------------------------------------------------------------------------
저장 시간: 2020-09-13 오전 5:42:47 - (일요일)
----------------------------------------------------------------------------------2,570//----------------------------------------------------------------------------------
//2020.2학기 C++															(1주2일)
// [목표]실행될때마다 원하는 파일을 하드디스크에 저장해보자
//       + 저장 시간도 기록해보자
//
// 주의 - 어려워하지 말자. 모르는 것이 당연하다. 몰라도 됨.
//----------------------------------------------------------------------------------

#pragma warning(disable:4996)
#include <iostream>	// (in/out)입출력 기능은 여기
#include <fstream>	//파일 읽고 쓰기 기능은 여기
#include <chrono>	//시간 관련기능은 여기
#include <iomanip>	//입출력 조작 가능 여기 (put_time함수 포함)

int main()
{
	//[문제]먼저 파일을 읽어 출력해보자.

	//[순서]

	//1.입력파일을 연다.
	std::ifstream in{ "소스.cpp" };

	if (!in) {
		std::cout << "파일을 열수 없습니다\n";
		return 0;
	}

	//2.출력할 파일을 덧붙여 쓰기 모드로 연다.
	std::ofstream out{ "2020학년 2학기 C++ 강의저장.txt" ,std::ios::app }; 

	//3.출력 파일의 시간을 기록한다.
	auto tp = std::chrono::system_clock::now();
	auto ct = std::chrono::system_clock::to_time_t(tp);
	auto lt = localtime(&ct);

	out.imbue(std::locale("korean"));
	out << '\n\n\n';
	out << "----------------------------------------------------------------------------------" << '\n';
	out <<"저장 시간: " << std::put_time(lt, "%c - (%A)") << std::endl;
	out << "----------------------------------------------------------------------------------" << '\n\n';
	
	//4.입력파일을 읽어 출력파일에 기록한다.
	int c;

	while ((c = in.get()) != EOF)
		out.put(c);	//객체에 out에 연결된 파일에 출력

	std::cout << "소스.cpp를 2020학년 2학기 C++ 강의저장.txt에 저장하였습니다.\n";
	
}



----------------------------------------------------------------------------------
저장 시간: 2020-09-13 오전 5:43:36 - (일요일)
----------------------------------------------------------------------------------

//----------------------------------------------------------------------------------
//2020.2학기 C++															(1주2일)
// [목표]실행될때마다 원하는 파일을 하드디스크에 저장해보자
//       + 저장 시간도 기록해보자
//
// 주의 - 어려워하지 말자. 모르는 것이 당연하다. 몰라도 됨.
//----------------------------------------------------------------------------------

#pragma warning(disable:4996)
#include <iostream>	// (in/out)입출력 기능은 여기
#include <fstream>	//파일 읽고 쓰기 기능은 여기
#include <chrono>	//시간 관련기능은 여기
#include <iomanip>	//입출력 조작 가능 여기 (put_time함수 포함)

int main()
{
	//[문제]먼저 파일을 읽어 출력해보자.

	//[순서]

	//1.입력파일을 연다.
	std::ifstream in{ "소스.cpp" };

	if (!in) {
		std::cout << "파일을 열수 없습니다\n";
		return 0;
	}

	//2.출력할 파일을 덧붙여 쓰기 모드로 연다.
	std::ofstream out{ "2020학년 2학기 C++ 강의저장.txt" ,std::ios::app }; 

	//3.출력 파일의 시간을 기록한다.
	auto tp = std::chrono::system_clock::now();
	auto ct = std::chrono::system_clock::to_time_t(tp);
	auto lt = localtime(&ct);

	out.imbue(std::locale("korean"));
	out << "\n\n\n";
	out << "----------------------------------------------------------------------------------" << '\n';
	out <<"저장 시간: " << std::put_time(lt, "%c - (%A)") << std::endl;
	out << "----------------------------------------------------------------------------------" << "\n\n";
	
	//4.입력파일을 읽어 출력파일에 기록한다.
	int c;

	while ((c = in.get()) != EOF)
		out.put(c);	//객체에 out에 연결된 파일에 출력

	std::cout << "소스.cpp를 2020학년 2학기 C++ 강의저장.txt에 저장하였습니다.\n";
	
}



//----------------------------------------------------------------------------------
저장 시간: 2020-09-13 오전 5:58:03 - (일요일)
//----------------------------------------------------------------------------------

//----------------------------------------------------------------------------------
//2020.2학기 C++															(1주2일)
// [목표]실행될때마다 원하는 파일을 하드디스크에 저장해보자
//       + 저장 시간도 기록해보자
//		 + (쓸모없는 문장이 계속 저장되네?)저장하는 기능을 함수로 만들자! -save 함수
//
// 주의 - 어려워하지 말자. 모르는 것이 당연하다. 몰라도 됨.
//----------------------------------------------------------------------------------

#pragma warning(disable:4996)
#include <iostream>	
#include "save.h"	//save 함수를 정의해놓고 불러써도 되지만 그럼 다시 코드가 길어지고 쓸모없는 정보가 저장되므로 헤더로 사용!

int main()
{
	save("소스.cpp");

	// 진짜 C++프로그램을 이제 시작합니다.
	//입출력 연습을 합니다.
}



//----------------------------------------------------------------------------------
저장 시간: 2020-09-13 오전 5:59:29 - (일요일)
//----------------------------------------------------------------------------------

#pragma warning(disable:4996)
#include <iostream>	// (in/out)입출력 기능은 여기
#include <fstream>	//파일 읽고 쓰기 기능은 여기
#include <chrono>	//시간 관련기능은 여기
#include <iomanip>	//입출력 조작 가능 여기 (put_time함수 포함)
#include <string>

void save( std::string fileName ) 
{
	//[문제]먼저 파일을 읽어 출력해보자.

	//[순서]

	//1.입력파일을 연다.
	std::ifstream in{ fileName };

	if (!in) {
		std::cout << "파일을 열수 없습니다\n";
	}

	//2.출력할 파일을 덧붙여 쓰기 모드로 연다.
	std::string outFileName{ "2020학년 2학기 C++ 강의저장.txt" };
	std::ofstream out{ outFileName ,std::ios::app };

	//3.출력 파일의 시간을 기록한다.
	auto tp = std::chrono::system_clock::now();
	auto ct = std::chrono::system_clock::to_time_t(tp);
	auto lt = localtime(&ct);

	out.imbue(std::locale("korean"));
	out << "\n\n\n";
	out << "//----------------------------------------------------------------------------------" << '\n';
	out << "저장 시간: " << std::put_time(lt, "%c - (%A)") << std::endl;
	out << "//----------------------------------------------------------------------------------" << "\n\n";

	//4.입력파일을 읽어 출력파일에 기록한다.
	int c;

	while ((c = in.get()) != EOF)
		out.put(c);	//객체에 out에 연결된 파일에 출력

	std::cout << fileName <<"를" << outFileName << "에 저장하였습니다.\n";
}


//----------------------------------------------------------------------------------
저장 시간: 2020-09-13 오전 5:59:29 - (일요일)
//----------------------------------------------------------------------------------

#pragma once

#include <string>

void save(std::string);


//----------------------------------------------------------------------------------
저장 시간: 2020-09-13 오전 5:59:29 - (일요일)
//----------------------------------------------------------------------------------

//----------------------------------------------------------------------------------
//2020.2학기 C++															(1주2일)
// [목표]실행될때마다 원하는 파일을 하드디스크에 저장해보자
//       + 저장 시간도 기록해보자
//		 + (쓸모없는 문장이 계속 저장되네?)저장하는 기능을 함수로 만들자! -save 함수
//
// 주의 - 어려워하지 말자. 모르는 것이 당연하다. 몰라도 됨.
//----------------------------------------------------------------------------------

#pragma warning(disable:4996)
#include <iostream>	
#include "save.h"	//save 함수를 정의해놓고 불러써도 되지만 그럼 다시 코드가 길어지고 쓸모없는 정보가 저장되므로 헤더로 사용!

int main()
{
	save("save.cpp");
	save("save.h");
	save("소스.cpp");

	// 진짜 C++프로그램을 이제 시작합니다.
	//입출력 연습을 합니다.
}



//----------------------------------------------------------------------------------
소스.cpp2020-09-13 오전 6:01:09 - (일요일)
//----------------------------------------------------------------------------------

//----------------------------------------------------------------------------------
//2020.2학기 C++															(1주2일)
// [목표]실행될때마다 원하는 파일을 하드디스크에 저장해보자
//       + 저장 시간도 기록해보자
//		 + (쓸모없는 문장이 계속 저장되네?)저장하는 기능을 함수로 만들자! -save 함수
//
// 주의 - 어려워하지 말자. 모르는 것이 당연하다. 몰라도 됨.
//----------------------------------------------------------------------------------

#pragma warning(disable:4996)
#include <iostream>	
#include "save.h"	//save 함수를 정의해놓고 불러써도 되지만 그럼 다시 코드가 길어지고 쓸모없는 정보가 저장되므로 헤더로 사용!

int main()
{
	save("소스.cpp");

	// 진짜 C++프로그램을 이제 시작합니다.
	//입출력 연습을 합니다.
}



-------------------------------------------------------------
소스.cpp - 2020-09-13 오전 6:02:26 - (일요일)
-------------------------------------------------------------

//----------------------------------------------------------------------------------
//2020.2학기 C++															(1주2일)
// [목표]실행될때마다 원하는 파일을 하드디스크에 저장해보자
//       + 저장 시간도 기록해보자
//		 + (쓸모없는 문장이 계속 저장되네?)저장하는 기능을 함수로 만들자! -save 함수
//
// 주의 - 어려워하지 말자. 모르는 것이 당연하다. 몰라도 됨.
//----------------------------------------------------------------------------------

#pragma warning(disable:4996)
#include <iostream>	
#include "save.h"	//save 함수를 정의해놓고 불러써도 되지만 그럼 다시 코드가 길어지고 쓸모없는 정보가 저장되므로 헤더로 사용!

int main()
{
	save("소스.cpp");

	// 진짜 C++프로그램을 이제 시작합니다.
	//입출력 연습을 합니다.
}



------------------------------------------------------
소스.cpp - 2020-09-13 오전 6:06:32 - (일요일)
------------------------------------------------------

//----------------------------------------------------------------------------------
//2020.2학기 C++															(1주2일)
//
// [목표] 이름을 물어보고 이름을 입력받는다.
//        입력받은 이름으로 인사 하자.
//----------------------------------------------------------------------------------

#pragma warning(disable:4996)
#include <iostream>	
#include "save.h"	

int main()
{
	// 진짜 C++프로그램을 이제 시작합니다.
	//입출력 연습을 합니다.

	std::cout << "이름이 뭐예요?";
	char name[40];
	std::cin >> name ;

	save("소스.cpp");
}



------------------------------------------------------
소스.cpp - 2020-09-13 오전 6:08:24 - (일요일)
------------------------------------------------------

//----------------------------------------------------------------------------------
//2020.2학기 C++															(1주2일)
//
// [목표] 이름을 물어보고 이름을 입력받는다.
//        입력받은 이름으로 인사 하자.
//----------------------------------------------------------------------------------

#pragma warning(disable:4996)
#include <iostream>	
#include "save.h"	

int main()
{
	// 진짜 C++프로그램을 이제 시작합니다.
	//입출력 연습을 합니다.

	std::cout << "이름이 뭐예요?";
	char name[40];
	std::cin >> name ;
	std::cout << name << "님 안녕하세요. 반갑습니다!" << '\n';


	save("소스.cpp");
}



------------------------------------------------------
소스.cpp - 2020-09-13 오전 9:44:46 - (일요일)
------------------------------------------------------

//----------------------------------------------------------------------------------
//2020.2학기 C++															(2주1일)
//
// [목표] 구구단을 출력하는 프로그램이다.
//        몇단을 출력할지를 물어보고 원하는 단을 화면에 출력하자!
//----------------------------------------------------------------------------------

#pragma warning(disable:4996)
#include <iostream>	
#include "save.h"	

int main()
{
	int 몇단;

	std::cout << "몇단을 출력할까요?: ";
	std::cin >> 몇단;



	save("소스.cpp");
}



------------------------------------------------------
소스.cpp - 2020-09-13 오전 9:47:19 - (일요일)
------------------------------------------------------

//----------------------------------------------------------------------------------
//2020.2학기 C++															(2주1일)
//
// [목표] 구구단을 출력하는 프로그램이다.
//        몇단을 출력할지를 물어보고 원하는 단을 화면에 출력하자!
//----------------------------------------------------------------------------------

#pragma warning(disable:4996)
#include <iostream>	
#include "save.h"	

int main()
{
	int num;

	std::cout << "몇단을 출력할까요?: ";
	std::cin >> num;

	if (num == 2)
		std::cout << "2*2=4\n2*3=6\n2*4=8\n2*5=10\n2*6=12\n2*7=14\n2*8=16\n2*9=18\n";
	



	save("소스.cpp");
}



------------------------------------------------------
소스.cpp - 2020-09-13 오전 9:50:07 - (일요일)
------------------------------------------------------

//----------------------------------------------------------------------------------
//2020.2학기 C++															(2주1일)
//
// [목표] 구구단을 출력하는 프로그램이다.
//        몇단을 출력할지를 물어보고 원하는 단을 화면에 출력하자!
//----------------------------------------------------------------------------------

#pragma warning(disable:4996)
#include <iostream>	
#include "save.h"	

int main()
{
	int num;

	std::cout << "몇단을 출력할까요?: ";
	std::cin >> num;

	std::cout << num <<"단입니다.\n%d*1=2\n%d*2=4\n2*3=6\n2*4=8\n2*5=10\n2*6=12\n2*7=14\n2*8=16\n2*9=18\n",num,num;
	



	save("소스.cpp");
}



------------------------------------------------------
소스.cpp - 2020-09-13 오전 9:52:08 - (일요일)
------------------------------------------------------

//----------------------------------------------------------------------------------
//2020.2학기 C++															(2주1일)
//
// [목표] 구구단을 출력하는 프로그램이다.
//        몇단을 출력할지를 물어보고 원하는 단을 화면에 출력하자!
//----------------------------------------------------------------------------------

#pragma warning(disable:4996)
#include <iostream>	
#include "save.h"	

int main()
{
	int num;

	std::cout << "몇단을 출력할까요?: ";
	std::cin >> num;

	std::cout << num <<"단입니다.\n";
	std::cout << num << "*1=" << num * 1 << '\n';
	std::cout << num << "*2=" << num * 2 << '\n';
	std::cout << num << "*3=" << num * 3 << '\n';
	std::cout << num << "*4=" << num * 4 << '\n';
	std::cout << num << "*5=" << num * 5 << '\n';
	std::cout << num << "*6=" << num * 6 << '\n';
	std::cout << num << "*7=" << num * 7 << '\n';
	std::cout << num << "*8=" << num * 8 << '\n';
	std::cout << num << "*9=" << num * 9 << '\n';


	save("소스.cpp");
}



------------------------------------------------------
소스.cpp - 2020-09-13 오전 9:52:20 - (일요일)
------------------------------------------------------

//----------------------------------------------------------------------------------
//2020.2학기 C++															(2주1일)
//
// [목표] 구구단을 출력하는 프로그램이다.
//        몇단을 출력할지를 물어보고 원하는 단을 화면에 출력하자!
//----------------------------------------------------------------------------------

#pragma warning(disable:4996)
#include <iostream>	
#include "save.h"	

int main()
{
	int num;

	std::cout << "몇단을 출력할까요?: ";
	std::cin >> num;

	std::cout << num <<"단입니다.\n";
	std::cout << num << "*1=" << num * 1 << '\n';
	std::cout << num << "*2=" << num * 2 << '\n';
	std::cout << num << "*3=" << num * 3 << '\n';
	std::cout << num << "*4=" << num * 4 << '\n';
	std::cout << num << "*5=" << num * 5 << '\n';
	std::cout << num << "*6=" << num * 6 << '\n';
	std::cout << num << "*7=" << num * 7 << '\n';
	std::cout << num << "*8=" << num * 8 << '\n';
	std::cout << num << "*9=" << num * 9 << '\n';


	save("소스.cpp");
}



------------------------------------------------------
소스.cpp - 2020-09-13 오전 9:54:58 - (일요일)
------------------------------------------------------

//----------------------------------------------------------------------------------
//2020.2학기 C++															(2주1일)
//
// [목표] 구구단을 출력하는 프로그램이다.
//        몇단을 출력할지를 물어보고 원하는 단을 화면에 출력하자!
//----------------------------------------------------------------------------------

#pragma warning(disable:4996)
#include <iostream>	
#include "save.h"	

int main()
{
	int num;

	std::cout << "몇단을 출력할까요?: ";
	std::cin >> num;

	std::cout << num << "단입니다.\n";
	for(int i=1;i<=9;i++)
	{
		std::cout << num << " * " << i <<" = " << num * i << '\n';
	}


	save("소스.cpp");
}



------------------------------------------------------
소스.cpp - 2020-09-13 오전 9:58:53 - (일요일)
------------------------------------------------------

//----------------------------------------------------------------------------------
//2020.2학기 C++															(2주1일)
//
// [목표] 구구단을 출력하는 프로그램이다.
//        몇단을 출력할지를 물어보고 원하는 단을 화면에 출력하자!
//----------------------------------------------------------------------------------

#pragma warning(disable:4996)
#include <iostream>	
#include "save.h"	

int main()
{
	int num = 1;

	//[심화]구구단 1단을 입력하기 전에는 계속 구구단을 외게해보자

	while (num) {
		std::cout << "몇단을 출력할까요?: ";
		std::cin >> num;

		std::cout << num << "단입니다.\n";
		for (int i = 1; i <= 9; i++)
			std::cout << num << " * " << i << " = " << num * i << '\n';

		if (num == 1)
			break;
	}


	save("소스.cpp");
}



------------------------------------------------------
소스.cpp - 2020-09-13 오전 10:02:33 - (일요일)
------------------------------------------------------

//----------------------------------------------------------------------------------
//2020.2학기 C++															(2주1일)
//
// [목표] 구구단을 출력하는 프로그램이다.
//        몇단을 출력할지를 물어보고 원하는 단을 화면에 출력하자!
//----------------------------------------------------------------------------------

#pragma warning(disable:4996)
#include <iostream>	
#include "save.h"	

int main()
{
	int num ;

	//[심화]구구단 2~9단까지만 입력받기

	while (true) {
		std::cout << "몇단을 출력할까요?: ";
		std::cin >> num;

		if (num < 2 || num > 9)
			break;

		std::cout << num << "단입니다.\n";
		for (int i = 1; i <= 9; i++)
			std::cout << num << " * " << i << " = " << num * i << "\n\n";

	}


	save("소스.cpp");
}



------------------------------------------------------
소스.cpp - 2020-09-13 오전 10:07:07 - (일요일)
------------------------------------------------------

//----------------------------------------------------------------------------------
//2020.2학기 C++															(2주1일)
//
// [목표] 구구단을 출력하는 프로그램이다.
//        몇단을 출력할지를 물어보고 원하는 단을 화면에 출력하자!
//----------------------------------------------------------------------------------

#pragma warning(disable:4996)
#include <iostream>	
#include "save.h"	

int main()
{
	int num ;

	//[심화]구구단 2~9단까지만 입력받기( 다른 숫자는 다시 입력받기)

	while (true) {
		std::cout << "몇단을 출력할까요?: ";
		std::cin >> num;

		if (num == 1)
			break;

		if (num < 2 || num > 9) {
			std::cout << "잘못입력하였습니다. 다시 입력해주시기 바랍니다.\n\n";
			continue;
		}
		

		std::cout << num << "단입니다.\n";
		for (int i = 1; i <= 9; i++)
			std::cout << num << " * " << i << " = " << num * i << "\n\n";

	}


	save("소스.cpp");
}



----------------------------------------------
소스.cpp - 2020-09-13 오전 10:09:29 - (일요일)
----------------------------------------------

//----------------------------------------------------------------------------------
//2020.2학기 C++															(2주1일)
//
// [목표] 구구단을 출력하는 프로그램이다.
//        몇단을 출력할지를 물어보고 원하는 단을 화면에 출력하자!
//----------------------------------------------------------------------------------

#pragma warning(disable:4996)
#include <iostream>	
#include "save.h"	

int main()
{
	int num ;

	//[심화]구구단 2~9단까지만 입력받기( 다른 숫자는 다시 입력받기)

	while (true) {
		std::cout << "몇단을 출력할까요?: ";
		std::cin >> num;

		if (num == 1)
			break;

		if (num < 2 or num > 9) {
			std::cout << "잘못입력하였습니다. 다시 입력해주시기 바랍니다.\n\n";
			continue;
		}
		

		std::cout << num << "단입니다.\n";
		for (int i = 1; i <= 9; i++)
			std::cout << num << " * " << i << " = " << num * i << "\n\n";

	}


	save("소스.cpp");
}



----------------------------------------------
소스.cpp - 2020-09-13 오전 10:19:32 - (일요일)
----------------------------------------------

//----------------------------------------------------------------------------------
//2020.2학기 C++															(2주1일)
//
//[단원]변수와 자료형 - variable,data type
//----------------------------------------------------------------------------------

#pragma warning(disable:4996)
#include <iostream>	
#include "save.h"	

//cin,cout,cerr,clog : 대표적인 c++입출력 명령어
int main()
{
	//변수 - 1,2,4,8바이트 메모리를 사용하여 원하는 값을 읽고 쓸수 있도록 메모리와 관련된 식별자
	//예) char c -> sizeof(char)만큼 메모리를 확보해라. 앞으로 나는 c라는 이름으로 그 메모리에 접근
	//			   하여 값을 읽고 쓰는 동작을 하겠다.

	save("소스.cpp");
}



----------------------------------------------
소스.cpp - 2020-09-13 오전 10:22:05 - (일요일)
----------------------------------------------

//----------------------------------------------------------------------------------
//2020.2학기 C++															(2주1일)
//
//[단원]변수와 자료형 - variable,data type
//----------------------------------------------------------------------------------

#pragma warning(disable:4996)
#include <iostream>	
#include "save.h"	

//cin,cout,cerr,clog : 대표적인 c++입출력 명령어
int main()
{
	//변수 - 1,2,4,8바이트 메모리를 사용하여 원하는 값을 읽고 쓸수 있도록 메모리와 관련된 식별자
	//예) char c -> sizeof(char)만큼 메모리를 확보해라. 앞으로 나는 c라는 이름으로 그 메모리에 접근
	//			   하여 값을 읽고 쓰는 동작을 하겠다.
	//심화예) X Y -> (해석) 나는 X만큼의 메모리로 Y라는 변수에 값을 사용할것이다.

	save("소스.cpp");
}



----------------------------------------------
소스.cpp - 2020-09-13 오전 10:26:18 - (일요일)
----------------------------------------------

//----------------------------------------------------------------------------------
//2020.2학기 C++															(2주1일)
//
//[단원]변수와 자료형 - variable,data type
//----------------------------------------------------------------------------------

#pragma warning(disable:4996)
#include <iostream>	
#include "save.h"	

//[문제] data type이 차지하는 메모리의 크기를 화면에 출력해라
int main()
{
	char c;
	//char은 data type이다.
	std::cout << "char의 크기 - " << sizeof(char) << "바이트입니다.\n";
	std::cout << "short의 크기 - " << sizeof(short) << "바이트입니다.\n";
	std::cout << "int의 크기 - " << sizeof(int) << "바이트입니다.\n";
	std::cout << "double의 크기 - " << sizeof(double) << "바이트입니다.\n";
	std::cout << "float의 크기 - " << sizeof(float) << "바이트입니다.\n";

	save("소스.cpp");
}



----------------------------------------------
소스.cpp - 2020-09-13 오전 10:35:27 - (일요일)
----------------------------------------------

//----------------------------------------------------------------------------------
//2020.2학기 C++															(2주1일)
//
//[단원]변수와 자료형 - variable,data type
//----------------------------------------------------------------------------------

#pragma warning(disable:4996)
#include <iostream>	
#include "save.h"	

//[문제] 변수에 값을 저장하고 그값을 화면에 츨력하며 메모리를 이해해 보자.

int main()
{
	char c;
	
	c = 1;	//== c = 0B0000'0001;

	//[실습]cout으로 c값을 화면에 출력하고 출력된 이유를 설명하시오.

	std::cout << c << '\n';	//cout은 "디폴트"char로 c를 출력한다.
							// -> ASCII의 1번 문자를 출력한다. => 그래서 이상한 문자가 출력되는 것

	save("소스.cpp");
}



----------------------------------------------
소스.cpp - 2020-09-13 오전 10:36:41 - (일요일)
----------------------------------------------

//----------------------------------------------------------------------------------
//2020.2학기 C++															(2주1일)
//
//[단원]변수와 자료형 - variable,data type
//----------------------------------------------------------------------------------

#pragma warning(disable:4996)
#include <iostream>	
#include "save.h"	

//[문제] 변수에 값을 저장하고 그값을 화면에 츨력하며 메모리를 이해해 보자.

int main()
{
	char c;
	
	c = 65;	//== c = 0B0100'0001;

	//[실습]cout으로 c값을 화면에 출력하고 출력된 이유를 설명하시오.

	std::cout << c << '\n';	//cout은 "디폴트"char로 c를 출력한다. (마치 c앞에 (char)가 숨겨져있는것)
							// -> ASCII의 1번 문자를 출력한다. => 그래서 이상한 문자가 출력되는 것

	save("소스.cpp");
}



----------------------------------------------
소스.cpp - 2020-09-13 오전 10:39:31 - (일요일)
----------------------------------------------

//----------------------------------------------------------------------------------
//2020.2학기 C++															(2주1일)
//
//[단원]변수와 자료형 - variable,data type
//----------------------------------------------------------------------------------

#pragma warning(disable:4996)
#include <iostream>	
#include "save.h"	

//[문제] 변수에 값을 저장하고 그값을 화면에 츨력하며 메모리를 이해해 보자.

int main()
{
	char c;
	
	c = 1;	//-> c라는 이름으로 1바이트 메모리의 값을 0000'0001로 썼다.

	//[실습]c를 출력하는데 화면에 1이라고 나오게 하자.
	//메모리 c의 값을 변경하면 안된다.

	std::cout << (int)c << '\n';	//해석을 바꿔준다.(옛날방식이긴함)
	std::cout << static_cast<int>(c)<<'\n'; //정식 
	save("소스.cpp");
}



----------------------------------------------
소스.cpp - 2020-09-13 오전 11:34:55 - (일요일)
----------------------------------------------

//----------------------------------------------------------------------------------
//2020.2학기 C++															(2주1일)
//
//[단원]변수와 자료형 - variable,data type
//----------------------------------------------------------------------------------

#pragma warning(disable:4996)
#include <iostream>	
#include "save.h"	

//[문제] 변수에 값을 저장하고 그값을 화면에 츨력하며 메모리를 이해해 보자.

int main()
{
	char c;		//1바이트 메모리를 확보하고 앞으로 c라는 이름으로 access하겠다. 0B????'????
	
	c = '1';	//-> c 메모리에 '1'이라는 값을 썼다. 아스키 코드의 0x31 ,십진수로 49 , 0B0011'0001이 기록된다.
				
	std::cout << c << '\n';	//c메모리의 값에 해당하는 아스키 코드 값을 화면에 출력한다.
							//아스키 코드의 49번째 문자를 화면에 출력한다.

	save("소스.cpp");
}



----------------------------------------------
소스.cpp - 2020-09-16 오후 11:35:54 - (수요일)
----------------------------------------------

//----------------------------------------------------------------------------------
//2020.2학기 C++															(2주1일)
//
//[단원]변수와 자료형 - variable,data type
//----------------------------------------------------------------------------------

#pragma warning(disable:4996)
#include <iostream>	
#include "save.h"	

//[문제] 변수에 값을 저장하고 그값을 화면에 츨력하며 메모리를 이해해 보자.

int main()
{
	char c;		//1바이트 메모리를 확보하고 앞으로 c라는 이름으로 access하겠다. 0B????'????
	
	c = '1';	//-> c 메모리에 '1'이라는 값을 썼다. 아스키 코드의 0x31 ,십진수로 49 , 0B0011'0001이 기록된다.
				
	std::cout << c << '\n';	//c메모리의 값에 해당하는 아스키 코드 값을 화면에 출력한다.
							//아스키 코드의 49번째 문자를 화면에 출력한다.

	save("소스.cpp");
}



----------------------------------------------
소스.cpp - 2020-09-16 오후 11:36:18 - (수요일)
----------------------------------------------

//----------------------------------------------------------------------------------
//2020.2학기 C++															(2주1일)
//
//[단원]변수와 자료형 - variable,data type
//----------------------------------------------------------------------------------

#pragma warning(disable:4996)
#include <iostream>	
#include "save.h"	

//[문제] 변수에 값을 저장하고 그값을 화면에 츨력하며 메모리를 이해해 보자.

int main()
{
	char c;		//1바이트 메모리를 확보하고 앞으로 c라는 이름으로 access하겠다. 0B????'????
	
	c = '1';	//-> c 메모리에 '1'이라는 값을 썼다. 아스키 코드의 0x31 ,십진수로 49 , 0B0011'0001이 기록된다.
				
	std::cout << c << '\n';	//c메모리의 값에 해당하는 아스키 코드 값을 화면에 출력한다.
							//아스키 코드의 49번째 문자를 화면에 출력한다.

	save("소스.cpp");
}



----------------------------------------------
소스.cpp - 2020-09-16 오후 11:36:27 - (수요일)
----------------------------------------------

//----------------------------------------------------------------------------------
//2020.2학기 C++															(2주1일)
//
//[단원]변수와 자료형 - variable,data type
//----------------------------------------------------------------------------------

#pragma warning(disable:4996)
#include <iostream>	
#include "save.h"	

//[문제] 변수에 값을 저장하고 그값을 화면에 츨력하며 메모리를 이해해 보자.

int main()
{
	char c;		//1바이트 메모리를 확보하고 앞으로 c라는 이름으로 access하겠다. 0B????'????
	
	c = '1';	//-> c 메모리에 '1'이라는 값을 썼다. 아스키 코드의 0x31 ,십진수로 49 , 0B0011'0001이 기록된다.
				
	std::cout << c << '\n';	//c메모리의 값에 해당하는 아스키 코드 값을 화면에 출력한다.
							//아스키 코드의 49번째 문자를 화면에 출력한다.

	save("소스.cpp");
}
